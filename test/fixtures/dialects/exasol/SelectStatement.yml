# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: b5f7a315c0424c22f5feb115d2cd64c1a7888e365f2f6c381a6b4a583d5fb8bd
file:
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: last_name
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: employee_id
          alias_expression:
            identifier: id
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: manager_id
          alias_expression:
            identifier: mgr_id
      - comma: ','
      - select_clause_element:
          bare_function: CONNECT_BY_ISLEAF
          alias_expression:
            identifier: leaf
      - comma: ','
      - select_clause_element:
          bare_function: LEVEL
      - comma: ','
      - select_clause_element:
          expression:
          - function:
              function_name:
                function_name_identifier: LPAD
              bracketed:
              - start_bracket: (
              - expression:
                  literal: "' '"
              - comma: ','
              - expression:
                - literal: '2'
                - binary_operator: '*'
                - bare_function: LEVEL
                - binary_operator: '-'
                - literal: '1'
              - end_bracket: )
          - binary_operator:
            - pipe: '|'
            - pipe: '|'
          - function:
              function_name:
                function_name_identifier: SYS_CONNECT_BY_PATH
              bracketed:
              - start_bracket: (
              - expression:
                  column_reference:
                    identifier: last_name
              - comma: ','
              - expression:
                  literal: "'/'"
              - end_bracket: )
          alias_expression:
            identifier: '"PATH"'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: employees
      connect_by_clause:
      - keyword: CONNECT
      - keyword: BY
      - expression:
        - keyword: PRIOR
        - column_reference:
            identifier: employee_id
        - comparison_operator:
            raw_comparison_operator: '='
        - column_reference:
            identifier: manager_id
        - binary_operator: AND
        - column_reference:
            identifier: dept_no
        - comparison_operator:
            raw_comparison_operator: '='
        - column_reference:
            identifier: dno
      - keyword: START
      - keyword: WITH
      - expression:
          column_reference:
            identifier: last_name
          comparison_operator:
            raw_comparison_operator: '='
          literal: "'Clark'"
      orderby_clause:
      - keyword: ORDER
      - keyword: BY
      - column_reference:
          identifier: employee_id
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: store
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: SUM
            bracketed:
              start_bracket: (
              expression:
                column_reference:
                  identifier: price
              end_bracket: )
          alias_expression:
            keyword: AS
            identifier: volume
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: sales
      groupby_clause:
      - keyword: GROUP
      - keyword: BY
      - column_reference:
          identifier: store
      orderby_clause:
      - keyword: ORDER
      - keyword: BY
      - column_reference:
          identifier: store
      - keyword: DESC
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: name
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: SUM
            bracketed:
              start_bracket: (
              expression:
                column_reference:
                  identifier: price
              end_bracket: )
          alias_expression:
            keyword: AS
            identifier: volume
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: customers
          join_clause:
          - keyword: JOIN
          - from_expression_element:
              table_expression:
                table_reference:
                  identifier: sales
          - keyword: USING
          - bracketed:
              start_bracket: (
              identifier: c_id
              end_bracket: )
      groupby_clause:
      - keyword: GROUP
      - keyword: BY
      - column_reference:
          identifier: name
      orderby_clause:
      - keyword: ORDER
      - keyword: BY
      - column_reference:
          identifier: name
- statement_terminator: ;
- statement:
    with_compound_statement:
      keyword: WITH
      common_table_expression:
        identifier: tmp_view
        keyword: AS
        bracketed:
          start_bracket: (
          select_statement:
            select_clause:
            - keyword: SELECT
            - select_clause_element:
                column_reference:
                  identifier: name
            - comma: ','
            - select_clause_element:
                column_reference:
                  identifier: price
            - comma: ','
            - select_clause_element:
                column_reference:
                  identifier: store
            from_clause:
            - keyword: FROM
            - from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      identifier: customers
            - comma: ','
            - from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      identifier: sales
            where_clause:
              keyword: WHERE
              expression:
              - column_reference:
                - identifier: customers
                - dot: .
                - identifier: c_id
              - comparison_operator:
                  raw_comparison_operator: '='
              - column_reference:
                - identifier: sales
                - dot: .
                - identifier: c_id
          end_bracket: )
      select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            function:
              function_name:
                function_name_identifier: sum
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    identifier: price
                end_bracket: )
            alias_expression:
              keyword: AS
              identifier: volume
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: name
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: store
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: tmp_view
        groupby_clause:
        - keyword: GROUP
        - keyword: BY
        - grouping_sets_clause:
          - keyword: GROUPING
          - keyword: SETS
          - bracketed:
              start_bracket: (
              grouping_expression_list:
              - expression:
                  column_reference:
                    identifier: name
              - comma: ','
              - expression:
                  column_reference:
                    identifier: store
              - comma: ','
              - expression:
                  array_literal:
                    start_bracket: (
                    end_bracket: )
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            bracketed:
              start_bracket: (
              table_expression:
                import_statement:
                - keyword: IMPORT
                - keyword: INTO
                - bracketed:
                    start_bracket: (
                    import_columns:
                      column_datatype_definition:
                        identifier: v
                        data_type:
                          keyword: VARCHAR
                          bracketed:
                            start_bracket: (
                            literal: '1'
                            end_bracket: )
                    end_bracket: )
                - import_from_clause:
                    keyword: FROM
                    import_export_dbsrc:
                    - keyword: EXA
                    - keyword: AT
                    - connection_definition:
                        identifier: my_connection
                    - keyword: TABLE
                    - table_reference:
                      - identifier: sys
                      - dot: .
                      - identifier: dual
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              identifier: aschema
              dot: .
              function_name_identifier: afunction
            bracketed:
            - start_bracket: (
            - expression:
                literal: "'hello'"
            - comma: ','
            - expression:
                literal: '123'
            - end_bracket: )
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
              - identifier: aschema
              - dot: .
              - identifier: mytable
      where_clause:
        keyword: WHERE
        expression:
        - bracketed:
          - start_bracket: (
          - column_reference:
              identifier: a
          - comma: ','
          - literal: '2'
          - comma: ','
          - function:
              function_name:
                function_name_identifier: substr
              bracketed:
              - start_bracket: (
              - expression:
                  column_reference:
                    identifier: c
              - comma: ','
              - expression:
                  literal: '1'
              - comma: ','
              - expression:
                  literal: '3'
              - end_bracket: )
          - end_bracket: )
        - keyword: IN
        - bracketed:
            start_bracket: (
            select_statement:
              select_clause:
              - keyword: SELECT
              - select_clause_element:
                  column_reference:
                    identifier: a
              - comma: ','
              - select_clause_element:
                  column_reference:
                    identifier: b
              - comma: ','
              - select_clause_element:
                  column_reference:
                    identifier: c
              from_clause:
                keyword: FROM
                from_expression:
                  from_expression_element:
                    table_expression:
                      table_reference:
                      - identifier: bschema
                      - dot: .
                      - identifier: yourtable
            end_bracket: )
- statement_terminator: ;
- statement:
    with_compound_statement:
      keyword: WITH
      common_table_expression:
        identifier: mylist
        keyword: AS
        bracketed:
          start_bracket: (
          values_clause:
          - keyword: VALUES
          - expression:
              bracketed:
              - start_bracket: (
              - expression:
                  literal: "'a'"
              - comma: ','
              - expression:
                  literal: "'b'"
              - comma: ','
              - expression:
                  literal: "'c'"
              - end_bracket: )
          - comma: ','
          - expression:
              bracketed:
              - start_bracket: (
              - literal: "'d'"
              - comma: ','
              - literal: "'e'"
              - comma: ','
              - literal: "'f'"
              - end_bracket: )
          - comma: ','
          - expression:
              bracketed:
              - start_bracket: (
              - function:
                  function_name:
                    function_name_identifier: f1
                  bracketed:
                    start_bracket: (
                    expression:
                      literal: "'a'"
                    end_bracket: )
              - comma: ','
              - literal: "'b'"
              - comma: ','
              - literal: "'d'"
              - end_bracket: )
          - alias_expression:
              keyword: AS
              identifier: mylist
              bracketed:
                start_bracket: (
                identifier_list:
                - identifier: a
                - comma: ','
                - identifier: b
                - comma: ','
                - identifier: c
                end_bracket: )
          end_bracket: )
      select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: mylist
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          bare_function: rowid
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: ROW_NUMBER
            bracketed:
              start_bracket: (
              end_bracket: )
            over_clause:
              keyword: OVER
              bracketed:
                start_bracket: (
                window_specification:
                  partitionby_clause:
                  - keyword: PARTITION
                  - keyword: BY
                  - bracketed:
                    - start_bracket: (
                    - expression:
                        column_reference:
                          identifier: col1
                    - comma: ','
                    - expression:
                        column_reference:
                          identifier: col2
                    - end_bracket: )
                  orderby_clause:
                  - keyword: ORDER
                  - keyword: BY
                  - column_reference:
                      identifier: col1
                  - keyword: DESC
                  - comma: ','
                  - column_reference:
                      identifier: col2
                  - keyword: DESC
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          bare_function: rowid
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: ROW_NUMBER
            bracketed:
              start_bracket: (
              end_bracket: )
            over_clause:
              keyword: OVER
              bracketed:
                start_bracket: (
                window_specification:
                  partitionby_clause:
                  - keyword: PARTITION
                  - keyword: BY
                  - bracketed:
                    - start_bracket: (
                    - expression:
                        column_reference:
                          identifier: col1
                    - comma: ','
                    - expression:
                        column_reference:
                          identifier: col2
                    - end_bracket: )
                end_bracket: )
      orderby_clause:
      - keyword: ORDER
      - keyword: BY
      - column_reference:
          identifier: col1
      - keyword: DESC
      - comma: ','
      - column_reference:
          identifier: col2
      - keyword: DESC
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          column_reference:
            identifier: x
        with_invalid_unique_pk_clause:
        - keyword: WITH
        - keyword: INVALID
        - keyword: UNIQUE
        - bracketed:
            start_bracket: (
            column_reference:
              identifier: myid
            end_bracket: )
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: t
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              values_clause:
                keyword: values
                bracketed:
                - start_bracket: (
                - expression:
                    literal: "'x'"
                - comma: ','
                - expression:
                    literal: "'y'"
                - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              values_clause:
                keyword: values
                bracketed:
                - start_bracket: (
                - expression:
                    literal: "'x'"
                - comma: ','
                - expression:
                    literal: "'y'"
                - end_bracket: )
                alias_expression:
                  keyword: AS
                  identifier: x
                  bracketed:
                    start_bracket: (
                    identifier_list:
                    - identifier: c1
                    - comma: ','
                    - identifier: c2
                    end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              values_clause:
                keyword: values
                bracketed:
                - start_bracket: (
                - expression:
                    bracketed:
                    - start_bracket: (
                    - literal: "'x'"
                    - comma: ','
                    - literal: "'2'"
                    - end_bracket: )
                - comma: ','
                - expression:
                    bracketed:
                    - start_bracket: (
                    - literal: "'y'"
                    - comma: ','
                    - literal: "'2'"
                    - end_bracket: )
                - end_bracket: )
                alias_expression:
                  keyword: AS
                  identifier: x
                  bracketed:
                    start_bracket: (
                    identifier_list:
                    - identifier: c1
                    - comma: ','
                    - identifier: c2
                    end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            bracketed:
              start_bracket: (
              table_expression:
                values_clause:
                - keyword: VALUES
                - expression:
                    literal: '1'
                - comma: ','
                - expression:
                    literal: '2'
                - comma: ','
                - expression:
                    literal: '3'
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            bracketed:
              start_bracket: (
              table_expression:
                values_clause:
                - keyword: VALUES
                - expression:
                    literal: '1'
                - comma: ','
                - expression:
                    literal: '2'
                - comma: ','
                - expression:
                    literal: '3'
              end_bracket: )
            alias_expression:
              keyword: AS
              identifier: xs
              bracketed:
                start_bracket: (
                identifier_list:
                  identifier: n1
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              values_range_clause:
              - keyword: VALUES
              - keyword: BETWEEN
              - literal: '1'
              - binary_operator: AND
              - literal: '15'
              - keyword: WITH
              - keyword: STEP
              - literal: '4'
- statement_terminator: ;
- statement:
    select_statement:
    - keyword: SELECT
    - select_clause_element:
        column_reference:
          identifier: first_name
    - comma: ','
    - select_clause_element:
        column_reference:
          identifier: name
    - with_invalid_foreign_key_clause:
      - keyword: WITH
      - keyword: INVALID
      - keyword: FOREIGN
      - keyword: KEY
      - bracketed:
          start_bracket: (
          column_reference:
            identifier: nr
          end_bracket: )
      - keyword: from
      - table_reference:
          identifier: T1
      - keyword: REFERENCING
      - table_reference:
          identifier: T2
      - bracketed:
          start_bracket: (
          column_reference:
            identifier: id
          end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      keyword: SELECT
      select_clause_element:
        wildcard_expression:
          wildcard_identifier:
            star: '*'
      with_invalid_foreign_key_clause:
      - keyword: WITH
      - keyword: INVALID
      - keyword: FOREIGN
      - keyword: KEY
      - bracketed:
        - start_bracket: (
        - column_reference:
            identifier: first_name
        - comma: ','
        - column_reference:
            identifier: name
        - end_bracket: )
      - keyword: from
      - table_reference:
          identifier: T1
      - keyword: REFERENCING
      - table_reference:
          identifier: T2
- statement_terminator: ;
- statement:
    select_statement:
      keyword: SELECT
      with_invalid_foreign_key_clause:
      - keyword: INVALID
      - keyword: FOREIGN
      - keyword: KEY
      - bracketed:
        - start_bracket: (
        - column_reference:
            identifier: nr
        - comma: ','
        - column_reference:
            identifier: first_name
        - comma: ','
        - column_reference:
            identifier: name
        - end_bracket: )
      - keyword: from
      - table_reference:
          identifier: T1
      - keyword: REFERENCING
      - table_reference:
          identifier: T2
      - bracketed:
        - start_bracket: (
        - column_reference:
            identifier: id
        - comma: ','
        - column_reference:
            identifier: first_name
        - comma: ','
        - column_reference:
            identifier: name
        - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
        into_table_clause:
        - keyword: INTO
        - keyword: TABLE
        - table_reference:
            identifier: t2
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: t1
      orderby_clause:
      - keyword: ORDER
      - keyword: BY
      - literal: '1'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          keyword: date
          literal: "'2021-09-21'"
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: dual
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        with_invalid_unique_pk_clause:
        - keyword: INVALID
        - keyword: PRIMARY
        - keyword: KEY
        - bracketed:
            start_bracket: (
            column_reference:
              identifier: first_name
            end_bracket: )
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: T1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: JSON_EXTRACT
            bracketed:
            - start_bracket: (
            - expression:
                column_reference:
                  identifier: json_str
            - comma: ','
            - expression:
                literal: "'$.\"@id\"'"
            - comma: ','
            - expression:
                literal: "'$.error()'"
            - end_bracket: )
            emits_segment:
              keyword: EMITS
              bracketed:
              - start_bracket: (
              - column_datatype_definition:
                  identifier: id
                  data_type:
                    keyword: VARCHAR
                    bracketed:
                      start_bracket: (
                      literal: '2000'
                      end_bracket: )
              - comma: ','
              - column_datatype_definition:
                  identifier: error_column
                  data_type:
                    keyword: VARCHAR
                    bracketed:
                      start_bracket: (
                      literal: '2000000'
                      end_bracket: )
              - end_bracket: )
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: t
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - literal: '10'
          - binary_operator: /
          - literal: '2'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: count
            bracketed:
              start_bracket: (
              star: '*'
              end_bracket: )
          alias_expression:
            keyword: as
            identifier: a
      - comma: ','
      - select_clause_element:
          expression:
            local_alias_segment:
              keyword: local
              dot: .
              identifier: a
            binary_operator: '*'
            literal: '10'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: x
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: ABS
            bracketed:
              start_bracket: (
              expression:
                column_reference:
                  identifier: x
              end_bracket: )
          alias_expression:
            keyword: AS
            identifier: x
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: t
      where_clause:
        keyword: WHERE
        expression:
          local_alias_segment:
            keyword: local
            dot: .
            identifier: x
          comparison_operator:
            raw_comparison_operator: '>'
          literal: '10'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: c1
          alias_expression:
            keyword: as
            identifier: cx
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: count
            bracketed:
              start_bracket: (
              star: '*'
              end_bracket: )
          alias_expression:
            keyword: as
            identifier: cc
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: x
      groupby_clause:
      - keyword: GROUP
      - keyword: BY
      - expression:
          local_alias_segment:
            keyword: local
            dot: .
            identifier: cx
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          column_reference:
            identifier: c1
          alias_expression:
            keyword: as
            identifier: cx
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: x
      orderby_clause:
      - keyword: ORDER
      - keyword: BY
      - expression:
          local_alias_segment:
            keyword: local
            dot: .
            identifier: cx
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: c1
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: count
            bracketed:
              start_bracket: (
              star: '*'
              end_bracket: )
          alias_expression:
            keyword: as
            identifier: c
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: x
      groupby_clause:
      - keyword: GROUP
      - keyword: BY
      - literal: '1'
      having_clause:
        keyword: HAVING
        expression:
          local_alias_segment:
            keyword: local
            dot: .
            identifier: c
          comparison_operator:
            raw_comparison_operator: '>'
          literal: '1'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: S_ID
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: C_ID
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: PRICE
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: ROW_NUMBER
            bracketed:
              start_bracket: (
              end_bracket: )
            over_clause:
              keyword: OVER
              bracketed:
                start_bracket: (
                window_specification:
                  partitionby_clause:
                  - keyword: PARTITION
                  - keyword: BY
                  - expression:
                      column_reference:
                        identifier: C_ID
                  orderby_clause:
                  - keyword: ORDER
                  - keyword: BY
                  - column_reference:
                      identifier: PRICE
                  - keyword: DESC
                end_bracket: )
          alias_expression:
            identifier: NUM
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: SALES
      qualify_clause:
        keyword: QUALIFY
        expression:
          local_alias_segment:
            keyword: local
            dot: .
            identifier: NUM
          comparison_operator:
            raw_comparison_operator: '='
          literal: '1'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          column_reference:
            identifier: '[day]'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: T
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          column_reference:
            identifier: '"day"'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: T
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: T
      preferring_clause:
        keyword: PREFERRING
        preference_term:
          keyword: HIGH
          local_alias_segment:
            keyword: LOCAL
            dot: .
            identifier: ranking
        partitionby_clause:
        - keyword: PARTITION
        - keyword: BY
        - expression:
            local_alias_segment:
              keyword: local
              dot: .
              identifier: c1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: T
      preferring_clause:
        keyword: PREFERRING
        preference_term:
          keyword: HIGH
          local_alias_segment:
            keyword: LOCAL
            dot: .
            identifier: ranking
          plus_prior_inverse:
          - keyword: PRIOR
          - keyword: TO
          - preference_term:
              keyword: LOW
              local_alias_segment:
                keyword: LOCAL
                dot: .
                identifier: budget
        partitionby_clause:
        - keyword: PARTITION
        - keyword: BY
        - expression:
            local_alias_segment:
              keyword: local
              dot: .
              identifier: c1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: T
      preferring_clause:
        keyword: PREFERRING
        preference_term:
          keyword: HIGH
          local_alias_segment:
            keyword: LOCAL
            dot: .
            identifier: ranking
          plus_prior_inverse:
            keyword: PLUS
            preference_term:
              keyword: LOW
              local_alias_segment:
                keyword: LOCAL
                dot: .
                identifier: budget
        partitionby_clause:
        - keyword: PARTITION
        - keyword: BY
        - expression:
            local_alias_segment:
              keyword: local
              dot: .
              identifier: c1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: T
      preferring_clause:
        keyword: PREFERRING
        preference_term:
          keyword: HIGH
          local_alias_segment:
            keyword: LOCAL
            dot: .
            identifier: ranking
          plus_prior_inverse:
          - keyword: PRIOR
          - keyword: TO
          - preference_term:
              keyword: LOW
              local_alias_segment:
                keyword: LOCAL
                dot: .
                identifier: budget
              plus_prior_inverse:
                keyword: INVERSE
                preference_term:
                  column_reference:
                    identifier: col20
        partitionby_clause:
        - keyword: PARTITION
        - keyword: BY
        - expression:
            local_alias_segment:
              keyword: local
              dot: .
              identifier: c1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: T
      where_clause:
        keyword: WHERE
        expression:
        - bracketed:
          - start_bracket: (
          - local_alias_segment:
              keyword: LOCAL
              dot: .
              identifier: c1
          - comma: ','
          - local_alias_segment:
              keyword: LOCAL
              dot: .
              identifier: c2
          - end_bracket: )
        - keyword: NOT
        - keyword: IN
        - bracketed:
            start_bracket: (
            select_statement:
              select_clause:
              - keyword: SELECT
              - select_clause_element:
                  column_reference:
                    identifier: c1
              - comma: ','
              - select_clause_element:
                  column_reference:
                    identifier: c2
              from_clause:
                keyword: FROM
                from_expression:
                  from_expression_element:
                    table_expression:
                      table_reference:
                        identifier: b
            end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          literal: "'ABC'"
          alias_expression:
            keyword: as
            identifier: c1
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: dual
      where_clause:
        keyword: WHERE
        expression:
          local_alias_segment:
            keyword: local
            dot: .
            identifier: c1
          comparison_operator:
            raw_comparison_operator: '='
          literal: "'ABC'"
- statement_terminator: ;
- statement:
    set_expression:
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              identifier: a
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: b
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: c
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: x
    - set_operator:
        keyword: union
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              identifier: a
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: b
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: c
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: y
    - orderby_clause:
      - keyword: ORDER
      - keyword: BY
      - column_reference:
          identifier: a
- statement_terminator: ;
- statement:
    set_expression:
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            expression:
              numeric_literal:
                sign_indicator: '-'
                literal: '1'
              binary_operator: '*'
              function:
                function_name:
                  function_name_identifier: row_number
                bracketed:
                  start_bracket: (
                  end_bracket: )
                over_clause:
                  keyword: OVER
                  bracketed:
                    start_bracket: (
                    end_bracket: )
            alias_expression:
              keyword: AS
              identifier: nummer
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - identifier: sys
                - dot: .
                - identifier: exa_sql_keywords
            join_clause:
            - keyword: CROSS
            - keyword: JOIN
            - from_expression_element:
                table_expression:
                  table_reference:
                  - identifier: sys
                  - dot: .
                  - identifier: exa_sql_keywords
    - set_operator:
      - keyword: UNION
      - keyword: ALL
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            literal: '0'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          interval_expression:
          - keyword: INTERVAL
          - literal: "'5'"
          - keyword: MONTH
      - comma: ','
      - select_clause_element:
          interval_expression:
          - keyword: INTERVAL
          - literal: "'130'"
          - keyword: MONTH
          - bracketed:
              start_bracket: (
              literal: '3'
              end_bracket: )
      - comma: ','
      - select_clause_element:
          interval_expression:
          - keyword: INTERVAL
          - literal: "'27'"
          - keyword: YEAR
      - comma: ','
      - select_clause_element:
          interval_expression:
          - keyword: INTERVAL
          - literal: "'100-1'"
          - keyword: YEAR
          - bracketed:
              start_bracket: (
              literal: '3'
              end_bracket: )
          - keyword: TO
          - keyword: MONTH
      - comma: ','
      - select_clause_element:
          interval_expression:
          - keyword: INTERVAL
          - literal: "'2-1'"
          - keyword: YEAR
          - keyword: TO
          - keyword: MONTH
      - comma: ','
      - select_clause_element:
          interval_expression:
          - keyword: INTERVAL
          - literal: "'10:20'"
          - keyword: HOUR
          - keyword: TO
          - keyword: MINUTE
      - comma: ','
      - select_clause_element:
          interval_expression:
          - keyword: INTERVAL
          - literal: "'2 23:10:59'"
          - keyword: DAY
          - keyword: TO
          - keyword: SECOND
      - comma: ','
      - select_clause_element:
          interval_expression:
          - keyword: INTERVAL
          - literal: "'6'"
          - keyword: MINUTE
      - comma: ','
      - select_clause_element:
          interval_expression:
          - keyword: INTERVAL
          - literal: "'5'"
          - keyword: DAY
      - comma: ','
      - select_clause_element:
          interval_expression:
          - keyword: INTERVAL
          - literal: "'100'"
          - keyword: HOUR
          - bracketed:
              start_bracket: (
              literal: '3'
              end_bracket: )
      - comma: ','
      - select_clause_element:
          interval_expression:
          - keyword: INTERVAL
          - literal: "'1.99999'"
          - keyword: SECOND
          - bracketed:
            - start_bracket: (
            - literal: '2'
            - comma: ','
            - literal: '2'
            - end_bracket: )
      - comma: ','
      - select_clause_element:
          interval_expression:
          - keyword: INTERVAL
          - literal: "'23:10:59.123'"
          - keyword: HOUR
          - bracketed:
              start_bracket: (
              literal: '2'
              end_bracket: )
          - keyword: TO
          - keyword: SECOND
          - bracketed:
              start_bracket: (
              literal: '3'
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: v
      - comma: ','
      - select_clause_element:
          expression:
          - keyword: DATE
          - literal: "'2020-10-26'"
          - binary_operator: +
          - column_reference:
              identifier: v
          - binary_operator: '*'
          - interval_expression:
            - keyword: INTERVAL
            - literal: "'7'"
            - keyword: DAY
          alias_expression:
            keyword: AS
            identifier: late_2020_mondays
      - comma: ','
      - select_clause_element:
          expression:
            literal: '5'
            binary_operator: '*'
            column_reference:
              identifier: v
          alias_expression:
            keyword: AS
            identifier: five_times_table
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              values_range_clause:
              - keyword: VALUES
              - keyword: BETWEEN
              - literal: '1'
              - binary_operator: AND
              - literal: '9'
            alias_expression:
              keyword: AS
              identifier: v
              bracketed:
                start_bracket: (
                identifier_list:
                  identifier: v
                end_bracket: )
- statement_terminator: ;
