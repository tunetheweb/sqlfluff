# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 67c7d072ec1b8d46101b5506ae2887a234167f679c0e241c76eb32101016d921
file:
  batch:
    statement:
      select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            expression:
              case_expression:
              - keyword: CASE
              - when_clause:
                - keyword: WHEN
                - expression:
                  - literal: '1'
                  - comparison_operator:
                      raw_comparison_operator: '='
                  - literal: '1'
                - keyword: THEN
                - expression:
                    literal: "'True'"
              - when_clause:
                - keyword: WHEN
                - expression:
                  - literal: '1'
                  - comparison_operator:
                      raw_comparison_operator: '>'
                  - literal: '1'
                - keyword: THEN
                - expression:
                    literal: "'False'"
              - when_clause:
                - keyword: WHEN
                - expression:
                  - literal: '1'
                  - comparison_operator:
                      raw_comparison_operator: <
                  - literal: '1'
                - keyword: THEN
                - expression:
                    literal: "'False'"
              - when_clause:
                - keyword: WHEN
                - expression:
                  - literal: '1'
                  - comparison_operator:
                    - raw_comparison_operator: '>'
                    - raw_comparison_operator: '='
                  - literal: '1'
                - keyword: THEN
                - expression:
                    literal: "'True'"
              - when_clause:
                - keyword: WHEN
                - expression:
                  - literal: '1'
                  - comparison_operator:
                    - raw_comparison_operator: '>'
                    - raw_comparison_operator: '='
                  - literal: '1'
                - keyword: THEN
                - expression:
                    literal: "'True'"
              - when_clause:
                - keyword: WHEN
                - expression:
                  - literal: '1'
                  - comparison_operator:
                    - raw_comparison_operator: <
                    - raw_comparison_operator: '='
                  - literal: '1'
                - keyword: THEN
                - expression:
                    literal: "'True'"
              - when_clause:
                - keyword: WHEN
                - expression:
                  - literal: '1'
                  - comparison_operator:
                    - raw_comparison_operator: <
                    - raw_comparison_operator: '='
                  - literal: '1'
                - keyword: THEN
                - expression:
                    literal: "'True'"
              - when_clause:
                - keyword: WHEN
                - expression:
                  - literal: '1'
                  - comparison_operator:
                    - raw_comparison_operator: <
                    - raw_comparison_operator: '>'
                  - literal: '1'
                - keyword: THEN
                - expression:
                    literal: "'False'"
              - when_clause:
                - keyword: WHEN
                - expression:
                  - literal: '1'
                  - comparison_operator:
                    - raw_comparison_operator: <
                    - raw_comparison_operator: '>'
                  - literal: '1'
                - keyword: THEN
                - expression:
                    literal: "'False'"
              - when_clause:
                - keyword: WHEN
                - expression:
                  - literal: '1'
                  - comparison_operator:
                    - raw_comparison_operator: '!'
                    - raw_comparison_operator: <
                  - literal: '1'
                - keyword: THEN
                - expression:
                    literal: "'Why is this a thing?'"
              - when_clause:
                - keyword: WHEN
                - expression:
                  - literal: '1'
                  - comparison_operator:
                    - raw_comparison_operator: '!'
                    - raw_comparison_operator: <
                  - literal: '1'
                - keyword: THEN
                - expression:
                    literal: "'Or this sort of thing?'"
              - when_clause:
                - keyword: WHEN
                - expression:
                  - literal: '1'
                  - comparison_operator:
                    - raw_comparison_operator: '!'
                    - raw_comparison_operator: '='
                  - literal: '1'
                - keyword: THEN
                - expression:
                    literal: "'False'"
              - when_clause:
                - keyword: WHEN
                - expression:
                  - literal: '1'
                  - comparison_operator:
                    - raw_comparison_operator: '!'
                    - raw_comparison_operator: '='
                  - literal: '1'
                - keyword: THEN
                - expression:
                    literal: "'False'"
              - when_clause:
                - keyword: WHEN
                - expression:
                  - literal: '1'
                  - comparison_operator:
                    - raw_comparison_operator: '!'
                    - raw_comparison_operator: '>'
                  - literal: '1'
                - keyword: THEN
                - expression:
                    literal: "'NULL Handling, Probably'"
              - when_clause:
                - keyword: WHEN
                - expression:
                  - literal: '1'
                  - comparison_operator:
                    - raw_comparison_operator: '!'
                    - raw_comparison_operator: '>'
                  - literal: '1'
                - keyword: THEN
                - expression:
                    literal: "'NULL Handling, Probably'"
              - else_clause:
                  keyword: ELSE
                  expression:
                    literal: "'Silly Tests'"
              - keyword: END
        - comma: ','
        - select_clause_element:
            column_reference:
            - identifier: all_pop
            - dot: .
            - identifier: '[Arrival Date]'
        - comma: ','
        - select_clause_element:
            column_reference:
            - identifier: all_pop
            - dot: .
            - identifier: Row#
        - comma: ','
        - select_clause_element:
            column_reference:
            - identifier: all_pop
            - dot: .
            - identifier: b@nanas
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: '[# POAs]'
        - comma: ','
        - select_clause_element:
            literal: "'TSQLs escaping quotes test'"
        - comma: ','
        - select_clause_element:
            literal: "'TSQL''s escaping quotes test'"
        - comma: ','
        - select_clause_element:
            literal: "'TSQL'"
            alias_expression:
              identifier: "'s escaping quotes test'"
        - comma: ','
        - select_clause_element:
            literal: "'TSQL'"
            alias_expression:
              keyword: AS
              identifier: "'s escaping quotes test'"
        - comma: ','
        - select_clause_element:
            literal: "''"
        - comma: ','
        - select_clause_element:
            literal: "''''"
        - comma: ','
        - select_clause_element:
            column_reference:
            - identifier: all_pop
            - dot: .
            - identifier: Language
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: ANSI_DEFAULTS
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: ANSI_NULL_DFLT_OFF
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: ANSI_NULL_DFLT_ON
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: ANSI_NULLS
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: ANSI_PADDING
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: ANSI_WARNINGS
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: ARITHABORT
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: ARITHIGNORE
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: CONCAT_NULL_YIELDS_NULL
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: CURSOR_CLOSE_ON_COMMIT
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: DATEFIRST
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: DATEFORMAT
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: DEADLOCK_PRIORITY
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: DISK
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: DUMP
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: FIPS_FLAGGER
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: FMTONLY
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: FORCEPLAN
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: IMPLICIT_TRANSACTIONS
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: LOAD
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: LOCK_TIMEOUT
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: NOCOUNT
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: NOEXEC
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: NUMERIC_ROUNDABORT
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: PARSEONLY
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: PRECISION
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: QUERY_GOVERNOR_COST_LIMIT
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: QUOTED_IDENTIFIER
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: REMOTE_PROC_TRANSACTIONS
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: SECURITYAUDIT
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: SHOWPLAN_ALL
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: SHOWPLAN_TEXT
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: SHOWPLAN_XML
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: XACT_ABORT
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: Rows
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: NaN
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: Rlike
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: Ilike
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: Separator
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: Auto_Increment
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: Unsigned
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: Describe
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: Comment
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: Ml
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: Modify
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: Minus
        - comma: ','
        - select_clause_element:
            function:
            - function_name:
                keyword: ROW_NUMBER
            - bracketed:
                start_bracket: (
                end_bracket: )
            - keyword: OVER
            - bracketed:
                start_bracket: (
                partitionby_clause:
                - keyword: PARTITION
                - keyword: BY
                - column_reference:
                    identifier: '[EventNM]'
                - comma: ','
                - column_reference:
                    identifier: '[PersonID]'
                orderby_clause:
                - keyword: ORDER
                - keyword: BY
                - column_reference:
                    identifier: '[DateofEvent]'
                - keyword: desc
                end_bracket: )
            alias_expression:
              keyword: AS
              identifier: '[RN]'
        - comma: ','
        - select_clause_element:
            function:
            - function_name:
                keyword: RANK
            - bracketed:
                start_bracket: (
                end_bracket: )
            - keyword: OVER
            - bracketed:
                start_bracket: (
                partitionby_clause:
                - keyword: PARTITION
                - keyword: BY
                - column_reference:
                    identifier: '[EventNM]'
                orderby_clause:
                - keyword: ORDER
                - keyword: BY
                - column_reference:
                    identifier: '[DateofEvent]'
                - keyword: desc
                end_bracket: )
            alias_expression:
              keyword: AS
              identifier: '[R]'
        - comma: ','
        - select_clause_element:
            function:
            - function_name:
                keyword: DENSE_RANK
            - bracketed:
                start_bracket: (
                end_bracket: )
            - keyword: OVER
            - bracketed:
                start_bracket: (
                partitionby_clause:
                - keyword: PARTITION
                - keyword: BY
                - column_reference:
                    identifier: '[EventNM]'
                orderby_clause:
                - keyword: ORDER
                - keyword: BY
                - column_reference:
                    identifier: '[DateofEvent]'
                - keyword: desc
                end_bracket: )
            alias_expression:
              keyword: AS
              identifier: '[DR]'
        - comma: ','
        - select_clause_element:
            function:
            - function_name:
                keyword: NTILE
            - bracketed:
                start_bracket: (
                literal: '5'
                end_bracket: )
            - keyword: OVER
            - bracketed:
                start_bracket: (
                partitionby_clause:
                - keyword: PARTITION
                - keyword: BY
                - column_reference:
                    identifier: '[EventNM]'
                orderby_clause:
                - keyword: ORDER
                - keyword: BY
                - column_reference:
                    identifier: '[DateofEvent]'
                - keyword: desc
                end_bracket: )
            alias_expression:
              keyword: AS
              identifier: '[NT]'
        - comma: ','
        - select_clause_element:
            function:
              function_name:
                function_name_identifier: sum
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                  - identifier: t
                  - dot: .
                  - identifier: col1
                end_bracket: )
              over_clause:
                keyword: over
                bracketed:
                  start_bracket: (
                  window_specification:
                    partitionby_clause:
                    - keyword: partition
                    - keyword: by
                    - column_reference:
                      - identifier: t
                      - dot: .
                      - identifier: col2
                    - comma: ','
                    - column_reference:
                      - identifier: t
                      - dot: .
                      - identifier: col3
                  end_bracket: )
        - comma: ','
        - select_clause_element:
            function:
            - function_name:
                keyword: ROW_NUMBER
            - bracketed:
                start_bracket: (
                end_bracket: )
            - keyword: OVER
            - bracketed:
                start_bracket: (
                partitionby_clause:
                - keyword: PARTITION
                - keyword: BY
                - bracketed:
                    start_bracket: (
                    select_statement:
                      select_clause:
                        keyword: SELECT
                        select_clause_element:
                          column_reference:
                            identifier: mediaty
                      from_clause:
                        keyword: FROM
                        from_expression:
                          from_expression_element:
                            table_expression:
                              table_reference:
                              - identifier: dbo
                              - dot: .
                              - identifier: MediaTypes
                            alias_expression:
                              identifier: ms
                      where_clause:
                        keyword: WHERE
                        expression:
                        - column_reference:
                          - identifier: ms
                          - dot: .
                          - identifier: MediaTypeID
                        - comparison_operator:
                            raw_comparison_operator: '='
                        - column_reference:
                          - identifier: f
                          - dot: .
                          - identifier: mediatypeid
                    end_bracket: )
                orderby_clause:
                - keyword: ORDER
                - keyword: BY
                - column_reference:
                    identifier: AdjustedPriorityScore
                - keyword: DESC
                end_bracket: )
            alias_expression:
              keyword: AS
              identifier: Subselect_Partition
        - comma: ','
        - select_clause_element:
            function:
            - function_name:
                keyword: ROW_NUMBER
            - bracketed:
                start_bracket: (
                end_bracket: )
            - keyword: OVER
            - bracketed:
                start_bracket: (
                partitionby_clause:
                - keyword: PARTITION
                - keyword: BY
                - function:
                    function_name:
                      function_name_identifier: COALESCE
                    bracketed:
                    - start_bracket: (
                    - expression:
                        column_reference:
                          identifier: NPI1
                    - comma: ','
                    - expression:
                        column_reference:
                          identifier: NPI2
                    - end_bracket: )
                orderby_clause:
                - keyword: ORDER
                - keyword: BY
                - expression:
                    function:
                      function_name:
                        function_name_identifier: COALESCE
                      bracketed:
                      - start_bracket: (
                      - expression:
                          column_reference:
                            identifier: SystemEffectiveDTS1
                      - comma: ','
                      - expression:
                          column_reference:
                            identifier: SystemEffectiveDTS2
                      - end_bracket: )
                - keyword: DESC
                end_bracket: )
            alias_expression:
              keyword: AS
              identifier: Coalesce_Partition
        - comma: ','
        - select_clause_element:
            function:
            - function_name:
                keyword: ROW_NUMBER
            - bracketed:
                start_bracket: (
                end_bracket: )
            - keyword: OVER
            - bracketed:
                start_bracket: (
                partitionby_clause:
                - keyword: PARTITION
                - keyword: BY
                - bracketed:
                    start_bracket: (
                    column_reference:
                      identifier: DayInMonth
                    end_bracket: )
                - comma: ','
                - bracketed:
                    start_bracket: (
                    column_reference:
                      identifier: DaySuffix
                    end_bracket: )
                orderby_clause:
                - keyword: ORDER
                - keyword: BY
                - column_reference:
                    identifier: Month
                - keyword: ASC
                end_bracket: )
        - comma: ','
        - select_clause_element:
            alias_expression:
              identifier: '[preceding]'
              raw_comparison_operator: '='
            function:
              function_name:
                function_name_identifier: count
              bracketed:
                start_bracket: (
                star: '*'
                end_bracket: )
              over_clause:
                keyword: over
                bracketed:
                  start_bracket: (
                  window_specification:
                    orderby_clause:
                    - keyword: order
                    - keyword: by
                    - column_reference:
                        identifier: object_id
                    frame_clause:
                    - keyword: ROWS
                    - keyword: BETWEEN
                    - keyword: UNBOUNDED
                    - keyword: PRECEDING
                    - binary_operator: AND
                    - keyword: CURRENT
                    - keyword: ROW
                  end_bracket: )
        - comma: ','
        - select_clause_element:
            alias_expression:
              identifier: '[central]'
              raw_comparison_operator: '='
            function:
              function_name:
                function_name_identifier: count
              bracketed:
                start_bracket: (
                star: '*'
                end_bracket: )
              over_clause:
                keyword: over
                bracketed:
                  start_bracket: (
                  window_specification:
                    orderby_clause:
                    - keyword: order
                    - keyword: by
                    - column_reference:
                        identifier: object_id
                    frame_clause:
                    - keyword: ROWS
                    - keyword: BETWEEN
                    - literal: '2'
                    - keyword: PRECEDING
                    - binary_operator: AND
                    - literal: '2'
                    - keyword: FOLLOWING
                  end_bracket: )
        - comma: ','
        - select_clause_element:
            alias_expression:
              identifier: '[following]'
              raw_comparison_operator: '='
            function:
              function_name:
                function_name_identifier: count
              bracketed:
                start_bracket: (
                star: '*'
                end_bracket: )
              over_clause:
                keyword: over
                bracketed:
                  start_bracket: (
                  window_specification:
                    orderby_clause:
                    - keyword: order
                    - keyword: by
                    - column_reference:
                        identifier: object_id
                    frame_clause:
                    - keyword: ROWS
                    - keyword: BETWEEN
                    - keyword: CURRENT
                    - keyword: ROW
                    - binary_operator: AND
                    - keyword: UNBOUNDED
                    - keyword: FOLLOWING
                  end_bracket: )
        - comma: ','
        - select_clause_element:
            alias_expression:
              identifier: EqualsAlias
              raw_comparison_operator: '='
            column_reference:
              identifier: ColumnName
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: OtherColumnName
            alias_expression:
              keyword: AS
              identifier: AsAlias
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - identifier: dbo
                - dot: .
                - identifier: all_pop
