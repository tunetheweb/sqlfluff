# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: f4d0f0156b3a4a242c31eb7f365ac0a1b15e0d9fee75d71ad0a22023abc4f468
file:
  batch:
  - statement:
      update_statement:
        keyword: update
        table_reference:
        - identifier: dbo
        - dot: .
        - identifier: Cases
        set_clause_list:
          keyword: set
          set_clause:
            column_reference:
              identifier: '[Flg]'
            assignment_operator:
              comparison_operator:
                raw_comparison_operator: '='
            expression:
              literal: '1'
        where_clause:
          keyword: where
          expression:
            column_reference:
              identifier: ID
            keyword: in
            bracketed:
              start_bracket: (
              select_statement:
                select_clause:
                  keyword: select
                  select_clause_modifier:
                    keyword: distinct
                  select_clause_element:
                    column_reference:
                      identifier: '[ID]'
                from_clause:
                  keyword: from
                  from_expression:
                    from_expression_element:
                      table_expression:
                        table_reference:
                        - identifier: dbo
                        - dot: .
                        - identifier: CX
              end_bracket: )
        option_clause:
          keyword: OPTION
          bracketed:
            start_bracket: (
            query_hint_segment:
              keyword: Label
              comparison_operator:
                raw_comparison_operator: '='
              literal: "'Cases'"
            end_bracket: )
        statement_terminator: ;
  - statement:
      update_statement:
        keyword: update
        table_reference:
          identifier: tt
        set_clause_list:
          keyword: set
          set_clause:
            column_reference:
            - identifier: tt
            - dot: .
            - identifier: rn
            assignment_operator:
              binary_operator: +
              comparison_operator:
                raw_comparison_operator: '='
            expression:
              literal: '1'
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: table1
              alias_expression:
                keyword: as
                identifier: tt
            join_clause:
              keyword: join
              from_expression_element:
                table_expression:
                  table_reference:
                    identifier: src
              join_on_condition:
                keyword: 'on'
                expression:
                - column_reference:
                  - identifier: tt
                  - dot: .
                  - identifier: _id
                - comparison_operator:
                    raw_comparison_operator: '='
                - column_reference:
                  - identifier: src
                  - dot: .
                  - identifier: _id
          statement_terminator: ;
  - statement:
      update_statement:
        keyword: UPDATE
        table_reference:
          identifier: stuff
        set_clause_list:
          keyword: SET
          set_clause:
            column_reference:
              identifier: deleted
            assignment_operator:
              comparison_operator:
                raw_comparison_operator: '='
            expression:
              literal: '1'
        output_clause:
        - keyword: OUTPUT
        - wildcard_expression:
            wildcard_identifier:
              star: '*'
        - keyword: INTO
        - table_reference:
            identifier: trash
        where_clause:
          keyword: WHERE
          expression:
            column_reference:
              identifier: useless
            comparison_operator:
              raw_comparison_operator: '='
            literal: '1'
