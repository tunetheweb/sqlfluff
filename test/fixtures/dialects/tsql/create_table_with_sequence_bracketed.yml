# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: e1c1f4d96321835b7782bb39121ae2c66a14483e6981eb8fb9226b9a457e44d0
file:
- batch:
    statement:
      if_then_statement:
        if_clause:
          keyword: IF
          expression:
          - keyword: NOT
          - keyword: EXISTS
          - bracketed:
              start_bracket: (
              select_statement:
                select_clause:
                  keyword: SELECT
                  select_clause_element:
                    wildcard_expression:
                      wildcard_identifier:
                        star: '*'
                from_clause:
                  keyword: FROM
                  from_expression:
                    from_expression_element:
                      table_expression:
                        table_reference:
                        - identifier: sys
                        - dot: .
                        - identifier: sequences
                where_clause:
                  keyword: WHERE
                  expression:
                  - column_reference:
                      identifier: object_id
                  - comparison_operator:
                      raw_comparison_operator: '='
                  - function:
                      function_name:
                        function_name_identifier: OBJECT_ID
                      bracketed:
                        start_bracket: (
                        expression:
                          literal: "N'[dbo].[SEQ_SCHEMA_NAME_TABLE_NAME]'"
                        end_bracket: )
                  - binary_operator: AND
                  - column_reference:
                      identifier: type
                  - comparison_operator:
                      raw_comparison_operator: '='
                  - literal: "'SO'"
              end_bracket: )
        statement:
          create_sequence_statement:
          - keyword: CREATE
          - keyword: SEQUENCE
          - sequence_reference:
              identifier: SEQ_SCHEMA_NAME_TABLE_NAME
          - create_sequence_options_segment:
            - keyword: START
            - keyword: WITH
            - literal: '1'
          - create_sequence_options_segment:
            - keyword: INCREMENT
            - keyword: BY
            - literal: '1'
        statement_terminator: ;
- go_statement:
    keyword: GO
- batch:
  - statement:
      create_table_statement:
      - keyword: CREATE
      - keyword: TABLE
      - table_reference:
        - identifier: SCHEMA_NAME
        - dot: .
        - identifier: TABLE_NAME
      - bracketed:
        - start_bracket: (
        - column_definition:
          - identifier: '[ID]'
          - data_type:
              data_type_identifier: INT
          - column_constraint_segment:
            - keyword: PRIMARY
            - keyword: KEY
          - column_constraint_segment:
            - keyword: NOT
            - keyword: 'NULL'
          - column_constraint_segment:
              keyword: DEFAULT
              bracketed:
                start_bracket: (
                sequence_next_value:
                - keyword: NEXT
                - keyword: VALUE
                - keyword: FOR
                - object_reference:
                  - identifier: '[dbo]'
                  - dot: .
                  - identifier: '[SEQ_SCHEMA_NAME_TABLE_NAME]'
                end_bracket: )
        - comma: ','
        - column_definition:
            identifier: '[WEEK_UNIX]'
            data_type:
              data_type_identifier: BIGINT
        - comma: ','
        - column_definition:
            identifier: GMCODE
            data_type:
              data_type_identifier: VARCHAR
              bracketed:
                start_bracket: (
                expression:
                  literal: '100'
                end_bracket: )
        - comma: ','
        - column_definition:
            identifier: AVERAGE_RNA_FLOW_PER_100000
            data_type:
              data_type_identifier: DECIMAL
              bracketed:
              - start_bracket: (
              - expression:
                  literal: '16'
              - comma: ','
              - expression:
                  literal: '2'
              - end_bracket: )
            column_constraint_segment:
              keyword: 'NULL'
        - comma: ','
        - column_definition:
            identifier: NUMBER_OF_MEASUREMENTS
            data_type:
              data_type_identifier: INT
            column_constraint_segment:
              keyword: 'NULL'
        - comma: ','
        - column_definition:
            identifier: NUMBER_OF_LOCATIONS
            data_type:
              data_type_identifier: INT
            column_constraint_segment:
              keyword: 'NULL'
        - comma: ','
        - column_definition:
            identifier: TOTAL_LOCATIONS
            data_type:
              data_type_identifier: INT
            column_constraint_segment:
              keyword: 'NULL'
        - comma: ','
        - column_definition:
            identifier: DATE_LAST_INSERTED
            data_type:
              data_type_identifier: DATETIME
            column_constraint_segment:
              keyword: DEFAULT
              function:
                function_name:
                  function_name_identifier: GETDATE
                bracketed:
                  start_bracket: (
                  end_bracket: )
        - end_bracket: )
      - statement_terminator: ;
  - statement:
      if_then_statement:
        if_clause:
          keyword: IF
          expression:
          - keyword: NOT
          - keyword: EXISTS
          - bracketed:
              start_bracket: (
              select_statement:
                select_clause:
                  keyword: SELECT
                  select_clause_element:
                    wildcard_expression:
                      wildcard_identifier:
                        star: '*'
                from_clause:
                  keyword: FROM
                  from_expression:
                    from_expression_element:
                      table_expression:
                        table_reference:
                        - identifier: sys
                        - dot: .
                        - identifier: sequences
                where_clause:
                  keyword: WHERE
                  expression:
                  - column_reference:
                      identifier: object_id
                  - comparison_operator:
                      raw_comparison_operator: '='
                  - function:
                      function_name:
                        function_name_identifier: OBJECT_ID
                      bracketed:
                        start_bracket: (
                        expression:
                          literal: "N'[dbo].[SEQ_STAGE_CBS_POPULATION_BASE]'"
                        end_bracket: )
                  - binary_operator: AND
                  - column_reference:
                      identifier: type
                  - comparison_operator:
                      raw_comparison_operator: '='
                  - literal: "'SO'"
              end_bracket: )
        statement:
          create_sequence_statement:
          - keyword: CREATE
          - keyword: SEQUENCE
          - sequence_reference:
              identifier: SEQ_STAGE_CBS_POPULATION_BASE
          - create_sequence_options_segment:
            - keyword: START
            - keyword: WITH
            - literal: '1'
          - create_sequence_options_segment:
            - keyword: INCREMENT
            - keyword: BY
            - literal: '1'
        statement_terminator: ;
- go_statement:
    keyword: GO
- batch:
    statement:
      create_table_statement:
      - keyword: CREATE
      - keyword: TABLE
      - table_reference:
        - identifier: STAGE
        - dot: .
        - identifier: CBS_POPULATION_BASE
      - bracketed:
        - start_bracket: (
        - column_definition:
          - identifier: '[ID]'
          - data_type:
              data_type_identifier: INT
          - column_constraint_segment:
            - keyword: PRIMARY
            - keyword: KEY
            - keyword: NONCLUSTERED
          - column_constraint_segment:
            - keyword: NOT
            - keyword: 'NULL'
          - column_constraint_segment:
              keyword: DEFAULT
              bracketed:
                start_bracket: (
                sequence_next_value:
                - keyword: NEXT
                - keyword: VALUE
                - keyword: FOR
                - object_reference:
                  - identifier: '[dbo]'
                  - dot: .
                  - identifier: '[SEQ_STAGE_CBS_POPULATION_BASE]'
                end_bracket: )
        - comma: ','
        - column_definition:
            identifier: GEMEENTE_CODE
            data_type:
              data_type_identifier: VARCHAR
              bracketed:
                start_bracket: (
                expression:
                  literal: '100'
                end_bracket: )
            column_constraint_segment:
              keyword: 'NULL'
        - comma: ','
        - column_definition:
            identifier: GEMEENTE
            data_type:
              data_type_identifier: VARCHAR
              bracketed:
                start_bracket: (
                expression:
                  literal: '100'
                end_bracket: )
            column_constraint_segment:
              keyword: 'NULL'
        - comma: ','
        - column_definition:
            identifier: LEEFTIJD
            data_type:
              data_type_identifier: VARCHAR
              bracketed:
                start_bracket: (
                expression:
                  literal: '100'
                end_bracket: )
            column_constraint_segment:
              keyword: 'NULL'
        - comma: ','
        - column_definition:
            identifier: GESLACHT
            data_type:
              data_type_identifier: VARCHAR
              bracketed:
                start_bracket: (
                expression:
                  literal: '100'
                end_bracket: )
            column_constraint_segment:
              keyword: 'NULL'
        - comma: ','
        - column_definition:
            identifier: DATUM_PEILING
            data_type:
              data_type_identifier: VARCHAR
              bracketed:
                start_bracket: (
                expression:
                  literal: '100'
                end_bracket: )
            column_constraint_segment:
              keyword: 'NULL'
        - comma: ','
        - column_definition:
            identifier: POPULATIE
            data_type:
              data_type_identifier: VARCHAR
              bracketed:
                start_bracket: (
                expression:
                  literal: '100'
                end_bracket: )
            column_constraint_segment:
              keyword: 'NULL'
        - comma: ','
        - column_definition:
            identifier: VEILIGHEIDSREGIO_CODE
            data_type:
              data_type_identifier: VARCHAR
              bracketed:
                start_bracket: (
                expression:
                  literal: '100'
                end_bracket: )
            column_constraint_segment:
              keyword: 'NULL'
        - comma: ','
        - column_definition:
            identifier: VEILIGHEIDSREGIO_NAAM
            data_type:
              data_type_identifier: VARCHAR
              bracketed:
                start_bracket: (
                expression:
                  literal: '100'
                end_bracket: )
            column_constraint_segment:
              keyword: 'NULL'
        - comma: ','
        - column_definition:
            identifier: PROVINCIE_CODE
            data_type:
              data_type_identifier: VARCHAR
              bracketed:
                start_bracket: (
                expression:
                  literal: '100'
                end_bracket: )
            column_constraint_segment:
              keyword: 'NULL'
        - comma: ','
        - column_definition:
            identifier: PROVINCIE_NAAM
            data_type:
              data_type_identifier: VARCHAR
              bracketed:
                start_bracket: (
                expression:
                  literal: '100'
                end_bracket: )
            column_constraint_segment:
              keyword: 'NULL'
        - comma: ','
        - column_definition:
            identifier: GGD_CODE
            data_type:
              data_type_identifier: VARCHAR
              bracketed:
                start_bracket: (
                expression:
                  literal: '100'
                end_bracket: )
            column_constraint_segment:
              keyword: 'NULL'
        - comma: ','
        - column_definition:
            identifier: GGD_NAAM
            data_type:
              data_type_identifier: VARCHAR
              bracketed:
                start_bracket: (
                expression:
                  literal: '100'
                end_bracket: )
            column_constraint_segment:
              keyword: 'NULL'
        - comma: ','
        - column_definition:
            identifier: DATE_LAST_INSERTED
            data_type:
              data_type_identifier: DATETIME
            column_constraint_segment:
              keyword: DEFAULT
              function:
                function_name:
                  function_name_identifier: GETDATE
                bracketed:
                  start_bracket: (
                  end_bracket: )
        - end_bracket: )
      - statement_terminator: ;
- go_statement:
    keyword: GO
- batch:
    statement:
      create_index_statement:
      - keyword: CREATE
      - keyword: CLUSTERED
      - keyword: INDEX
      - index_reference:
          identifier: CI_DLI_STAGE_CBS_POPULATION_BASE
      - keyword: 'ON'
      - table_reference:
        - identifier: STAGE
        - dot: .
        - identifier: CBS_POPULATION_BASE
      - bracketed_index_column_list_grammar:
          bracketed:
            start_bracket: (
            index_column_definition:
              identifier: DATE_LAST_INSERTED
            end_bracket: )
- go_statement:
    keyword: GO
- batch:
  - statement:
      create_index_statement:
      - keyword: CREATE
      - keyword: NONCLUSTERED
      - keyword: INDEX
      - index_reference:
          identifier: NCI_DLI_STAGE_CIMS_VACCINATED_AGE_GROUP
      - keyword: 'ON'
      - table_reference:
        - identifier: STAGE
        - dot: .
        - identifier: CBS_POPULATION_BASE
      - bracketed_index_column_list_grammar:
          bracketed:
          - start_bracket: (
          - index_column_definition:
              identifier: DATE_LAST_INSERTED
          - comma: ','
          - index_column_definition:
              identifier: GEMEENTE_CODE
          - comma: ','
          - index_column_definition:
              identifier: GEMEENTE
          - comma: ','
          - index_column_definition:
              identifier: LEEFTIJD
          - comma: ','
          - index_column_definition:
              identifier: GESLACHT
          - comma: ','
          - index_column_definition:
              identifier: DATUM_PEILING
          - comma: ','
          - index_column_definition:
              identifier: POPULATIE
          - comma: ','
          - index_column_definition:
              identifier: VEILIGHEIDSREGIO_CODE
          - comma: ','
          - index_column_definition:
              identifier: VEILIGHEIDSREGIO_NAAM
          - comma: ','
          - index_column_definition:
              identifier: PROVINCIE_CODE
          - comma: ','
          - index_column_definition:
              identifier: PROVINCIE_NAAM
          - comma: ','
          - index_column_definition:
              identifier: GGD_CODE
          - comma: ','
          - index_column_definition:
              identifier: GGD_NAAM
          - end_bracket: )
      - statement_terminator: ;
  - statement:
      create_table_statement:
      - keyword: CREATE
      - keyword: TABLE
      - table_reference:
        - identifier: DEST
        - dot: .
        - identifier: POSITIVE_TESTED_PEOPLE
      - bracketed:
        - start_bracket: (
        - column_definition:
          - identifier: '[ID]'
          - data_type:
              data_type_identifier: INT
          - column_constraint_segment:
            - keyword: PRIMARY
            - keyword: KEY
          - column_constraint_segment:
            - keyword: NOT
            - keyword: 'NULL'
          - column_constraint_segment:
              keyword: DEFAULT
              bracketed:
                start_bracket: (
                sequence_next_value:
                - keyword: NEXT
                - keyword: VALUE
                - keyword: FOR
                - object_reference:
                  - identifier: '[dbo]'
                  - dot: .
                  - identifier: '[SEQ_DEST_POSITIVE_TESTED_PEOPLE]'
                end_bracket: )
        - comma: ','
        - column_definition:
            identifier: DATE_OF_REPORT
            data_type:
              data_type_identifier: DATETIME
            column_constraint_segment:
              keyword: 'NULL'
        - comma: ','
        - column_definition:
            identifier: DATE_OF_REPORT_UNIX
            data_type:
              data_type_identifier: BIGINT
            column_constraint_segment:
              keyword: 'NULL'
        - comma: ','
        - column_definition:
            identifier: INFECTED_DAILY_INCREASE
            data_type:
              data_type_identifier: DECIMAL
              bracketed:
              - start_bracket: (
              - expression:
                  literal: '16'
              - comma: ','
              - expression:
                  literal: '1'
              - end_bracket: )
            column_constraint_segment:
              keyword: 'NULL'
        - comma: ','
        - column_definition:
            identifier: INFECTED_DAILY_TOTAL
            data_type:
              data_type_identifier: INT
            column_constraint_segment:
              keyword: 'NULL'
        - comma: ','
        - column_definition:
            identifier: DATE_LAST_INSERTED
            data_type:
              data_type_identifier: DATETIME
            column_constraint_segment:
              keyword: DEFAULT
              function:
                function_name:
                  function_name_identifier: GETDATE
                bracketed:
                  start_bracket: (
                  end_bracket: )
        - comma: ','
        - column_definition:
            identifier: '[DATE_RANGE_START]'
            data_type:
              data_type_identifier: datetime
        - comma: ','
        - column_definition:
            identifier: '[DATE_OF_REPORTS_LAG]'
            data_type:
              data_type_identifier: datetime
        - comma: ','
        - column_definition:
            identifier: '[DATE_RANGE_START_LAG]'
            data_type:
              data_type_identifier: datetime
        - comma: ','
        - column_definition:
            identifier: '[7D_AVERAGE_INFECTED_DAILY_INCREASE_TOTAL]'
            data_type:
              data_type_identifier: decimal
              bracketed:
              - start_bracket: (
              - expression:
                  literal: '16'
              - comma: ','
              - expression:
                  literal: '2'
              - end_bracket: )
        - comma: ','
        - column_definition:
            identifier: '[7D_AVERAGE_INFECTED_DAILY_INCREASE_LAG]'
            data_type:
              data_type_identifier: decimal
              bracketed:
              - start_bracket: (
              - expression:
                  literal: '16'
              - comma: ','
              - expression:
                  literal: '2'
              - end_bracket: )
        - comma: ','
        - column_definition:
            identifier: '[7D_AVERAGE_INFECTED_DAILY_INCREASE_ABSOLUTE]'
            data_type:
              data_type_identifier: decimal
              bracketed:
              - start_bracket: (
              - expression:
                  literal: '16'
              - comma: ','
              - expression:
                  literal: '2'
              - end_bracket: )
        - end_bracket: )
      - statement_terminator: ;
