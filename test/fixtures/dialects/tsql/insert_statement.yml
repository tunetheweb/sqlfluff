# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 09086fc0eaf36a2101673087de8442bde4d6f46fa5065c5b18a1f3026f0d5693
file:
- batch:
    statement:
      insert_statement:
      - keyword: INSERT
      - keyword: INTO
      - table_reference:
        - identifier: INTER
        - dot: .
        - identifier: ECDC_CASES
      - bracketed:
        - start_bracket: (
        - column_reference:
            identifier: '[COUNTRY]'
        - comma: ','
        - column_reference:
            identifier: '[COUNTRY_CODE]'
        - comma: ','
        - column_reference:
            identifier: '[CONTINENT]'
        - comma: ','
        - column_reference:
            identifier: '[POPULATION]'
        - comma: ','
        - column_reference:
            identifier: '[INDICATOR]'
        - comma: ','
        - column_reference:
            identifier: '[WEEKLY_COUNT]'
        - comma: ','
        - column_reference:
            identifier: '[YEAR_WEEK]'
        - comma: ','
        - column_reference:
            identifier: '[WEEK_START]'
        - comma: ','
        - column_reference:
            identifier: '[WEEK_END]'
        - comma: ','
        - column_reference:
            identifier: '[RATE_14_DAY]'
        - comma: ','
        - column_reference:
            identifier: '[CUMULATIVE_COUNT]'
        - comma: ','
        - column_reference:
            identifier: '[SOURCE]'
        - end_bracket: )
      - select_statement:
          select_clause:
          - keyword: SELECT
          - select_clause_element:
              column_reference:
                identifier: '[COUNTRY]'
          - comma: ','
          - select_clause_element:
              column_reference:
                identifier: '[COUNTRY_CODE]'
          - comma: ','
          - select_clause_element:
              column_reference:
                identifier: '[CONTINENT]'
          - comma: ','
          - select_clause_element:
              function:
                function_name:
                  keyword: CAST
                bracketed:
                  start_bracket: (
                  expression:
                    column_reference:
                      identifier: '[POPULATION]'
                  keyword: AS
                  data_type:
                    data_type_identifier: BIGINT
                  end_bracket: )
              alias_expression:
                keyword: AS
                identifier: '[POPULATION]'
          - comma: ','
          - select_clause_element:
              column_reference:
                identifier: '[INDICATOR]'
          - comma: ','
          - select_clause_element:
              function:
                function_name:
                  keyword: CAST
                bracketed:
                  start_bracket: (
                  expression:
                    column_reference:
                      identifier: '[WEEKLY_COUNT]'
                  keyword: AS
                  data_type:
                    data_type_identifier: BIGINT
                  end_bracket: )
              alias_expression:
                keyword: AS
                identifier: '[WEEKLY_COUNT]'
          - comma: ','
          - select_clause_element:
              column_reference:
                identifier: '[YEAR_WEEK]'
          - comma: ','
          - select_clause_element:
              function:
                function_name:
                  keyword: CAST
                bracketed:
                  start_bracket: (
                  expression:
                    function:
                      function_name:
                        identifier: '[dbo]'
                        dot: .
                        function_name_identifier: '[CONVERT_ISO_WEEK_TO_DATETIME]'
                      bracketed:
                      - start_bracket: (
                      - expression:
                          function:
                            function_name:
                              function_name_identifier: LEFT
                            bracketed:
                            - start_bracket: (
                            - expression:
                                column_reference:
                                  identifier: YEAR_WEEK
                            - comma: ','
                            - expression:
                                literal: '4'
                            - end_bracket: )
                      - comma: ','
                      - expression:
                          function:
                            function_name:
                              function_name_identifier: RIGHT
                            bracketed:
                            - start_bracket: (
                            - expression:
                                column_reference:
                                  identifier: YEAR_WEEK
                            - comma: ','
                            - expression:
                                literal: '2'
                            - end_bracket: )
                      - end_bracket: )
                  keyword: AS
                  data_type:
                    data_type_identifier: DATE
                  end_bracket: )
              alias_expression:
                keyword: AS
                identifier: '[WEEK_START]'
          - comma: ','
          - select_clause_element:
              function:
                function_name:
                  keyword: CAST
                bracketed:
                  start_bracket: (
                  expression:
                    function:
                      function_name:
                        identifier: '[dbo]'
                        dot: .
                        function_name_identifier: '[WEEK_END]'
                      bracketed:
                        start_bracket: (
                        expression:
                          function:
                            function_name:
                              identifier: '[dbo]'
                              dot: .
                              function_name_identifier: '[CONVERT_ISO_WEEK_TO_DATETIME]'
                            bracketed:
                            - start_bracket: (
                            - expression:
                                function:
                                  function_name:
                                    function_name_identifier: LEFT
                                  bracketed:
                                  - start_bracket: (
                                  - expression:
                                      column_reference:
                                        identifier: YEAR_WEEK
                                  - comma: ','
                                  - expression:
                                      literal: '4'
                                  - end_bracket: )
                            - comma: ','
                            - expression:
                                function:
                                  function_name:
                                    function_name_identifier: RIGHT
                                  bracketed:
                                  - start_bracket: (
                                  - expression:
                                      column_reference:
                                        identifier: YEAR_WEEK
                                  - comma: ','
                                  - expression:
                                      literal: '2'
                                  - end_bracket: )
                            - end_bracket: )
                        end_bracket: )
                  keyword: AS
                  data_type:
                    data_type_identifier: DATE
                  end_bracket: )
              alias_expression:
                keyword: AS
                identifier: '[WEEK_END]'
          - comma: ','
          - select_clause_element:
              function:
                function_name:
                  keyword: CAST
                bracketed:
                  start_bracket: (
                  expression:
                    column_reference:
                      identifier: '[RATE_14_DAY]'
                  keyword: AS
                  data_type:
                    data_type_identifier: FLOAT
                  end_bracket: )
              alias_expression:
                keyword: AS
                identifier: '[RATE_14_DAY]'
          - comma: ','
          - select_clause_element:
              function:
                function_name:
                  keyword: CAST
                bracketed:
                  start_bracket: (
                  expression:
                    column_reference:
                      identifier: '[CUMULATIVE_COUNT]'
                  keyword: AS
                  data_type:
                    data_type_identifier: BIGINT
                  end_bracket: )
              alias_expression:
                keyword: AS
                identifier: '[CUMULATIVE_COUNT]'
          - comma: ','
          - select_clause_element:
              column_reference:
                identifier: '[SOURCE]'
          from_clause:
            keyword: FROM
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                  - identifier: STAGE
                  - dot: .
                  - identifier: ECDC_CASES
- go_statement:
    keyword: GO
- batch:
    statement:
      begin_end_block:
      - keyword: BEGIN
      - statement:
          insert_statement:
          - keyword: INSERT
          - keyword: INTO
          - table_reference:
            - identifier: HumanResources
            - dot: .
            - identifier: NewEmployee
          - select_statement:
              select_clause:
              - keyword: SELECT
              - select_clause_element:
                  column_reference:
                    identifier: EmpID
              - comma: ','
              - select_clause_element:
                  column_reference:
                    identifier: LastName
              - comma: ','
              - select_clause_element:
                  column_reference:
                    identifier: FirstName
              - comma: ','
              - select_clause_element:
                  column_reference:
                    identifier: Phone
              - comma: ','
              - select_clause_element:
                  column_reference:
                    identifier: Address
              - comma: ','
              - select_clause_element:
                  column_reference:
                    identifier: City
              - comma: ','
              - select_clause_element:
                  column_reference:
                    identifier: StateProvince
              - comma: ','
              - select_clause_element:
                  column_reference:
                    identifier: PostalCode
              - comma: ','
              - select_clause_element:
                  column_reference:
                    identifier: CurrentFlag
              from_clause:
                keyword: FROM
                from_expression:
                  from_expression_element:
                    table_expression:
                      table_reference:
                        identifier: EmployeeTemp
                statement_terminator: ;
      - keyword: END
- go_statement:
    keyword: GO
- batch:
    statement:
      insert_statement:
      - keyword: INSERT
      - keyword: INTO
      - table_reference:
        - identifier: HumanResources
        - dot: .
        - identifier: NewEmployee
      - select_statement:
          select_clause:
          - keyword: SELECT
          - select_clause_element:
              column_reference:
                identifier: EmpID
          - comma: ','
          - select_clause_element:
              column_reference:
                identifier: LastName
          - comma: ','
          - select_clause_element:
              column_reference:
                identifier: FirstName
          - comma: ','
          - select_clause_element:
              column_reference:
                identifier: Phone
          - comma: ','
          - select_clause_element:
              column_reference:
                identifier: Address
          - comma: ','
          - select_clause_element:
              column_reference:
                identifier: City
          - comma: ','
          - select_clause_element:
              column_reference:
                identifier: StateProvince
          - comma: ','
          - select_clause_element:
              column_reference:
                identifier: PostalCode
          - comma: ','
          - select_clause_element:
              column_reference:
                identifier: CurrentFlag
          from_clause:
            keyword: FROM
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    identifier: EmployeeTemp
            statement_terminator: ;
- go_statement:
    keyword: GO
- batch:
    statement:
      insert_statement:
      - keyword: INSERT
      - keyword: INTO
      - table_reference:
        - identifier: HumanResources
        - dot: .
        - identifier: NewEmployee
      - post_table_expression:
          keyword: WITH
          bracketed:
            start_bracket: (
            query_hint_segment:
              keyword: TABLOCK
            end_bracket: )
      - output_clause:
        - keyword: OUTPUT
        - wildcard_expression:
            wildcard_identifier:
              star: '*'
        - keyword: INTO
        - table_reference:
            identifier: Results
      - execute_script_statement:
          keyword: EXEC
          object_reference:
            identifier: FindEmployeesFunc
          parameter: '@lastName'
          comparison_operator:
            raw_comparison_operator: '='
          literal: "'Picard'"
- go_statement:
    keyword: GO
- batch:
    statement:
      insert_statement:
        keyword: INSERT
        table_reference:
        - identifier: HumanResources
        - dot: .
        - identifier: NewEmployee
        bracketed:
        - start_bracket: (
        - column_reference:
            identifier: LastName
        - comma: ','
        - column_reference:
            identifier: FirstName
        - end_bracket: )
        values_clause:
          keyword: values
          bracketed:
          - start_bracket: (
          - expression:
              literal: "'Kirk'"
          - comma: ','
          - expression:
              literal: "'James'"
          - end_bracket: )
- go_statement:
    keyword: GO
