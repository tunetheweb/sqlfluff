# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 9ca2a074639102001f4b4557481c7a37516756de260bcdc389b53ed3241e6a93
file:
- statement:
    create_view_statement:
    - keyword: CREATE
    - keyword: VIEW
    - table_reference:
        identifier: a
    - keyword: AS
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            column_reference:
              identifier: c
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: table1
            join_clause:
            - keyword: INNER
            - keyword: JOIN
            - from_expression_element:
                table_expression:
                  table_reference:
                    identifier: table2
            - join_on_condition:
                keyword: 'ON'
                bracketed:
                  start_bracket: (
                  expression:
                  - column_reference:
                    - identifier: table1
                    - dot: .
                    - identifier: id
                  - comparison_operator:
                      raw_comparison_operator: '='
                  - column_reference:
                    - identifier: table2
                    - dot: .
                    - identifier: id
                  end_bracket: )
- statement_terminator: ;
- statement:
    create_view_statement:
    - keyword: CREATE
    - binary_operator: OR
    - keyword: REPLACE
    - keyword: VIEW
    - table_reference:
        identifier: vw_appt_latest
    - keyword: AS
    - bracketed:
        start_bracket: (
        with_compound_statement:
          keyword: WITH
          common_table_expression:
            identifier: most_current
            keyword: as
            bracketed:
              start_bracket: (
              select_statement:
                select_clause:
                  keyword: SELECT
                  select_clause_element:
                    wildcard_expression:
                      wildcard_identifier:
                        identifier: da
                        dot: .
                        star: '*'
                from_clause:
                  keyword: FROM
                  from_expression:
                    from_expression_element:
                      table_expression:
                        table_reference:
                          identifier: dim_appt
                      alias_expression:
                        identifier: da
                where_clause:
                  keyword: WHERE
                  expression:
                  - column_reference:
                    - identifier: da
                    - dot: .
                    - identifier: current_appt_id
                  - keyword: IS
                  - keyword: 'NULL'
              end_bracket: )
          select_statement:
            select_clause:
              keyword: SELECT
              select_clause_element:
                wildcard_expression:
                  wildcard_identifier:
                    star: '*'
            from_clause:
              keyword: from
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      identifier: most_current
        end_bracket: )
- statement_terminator: ;
