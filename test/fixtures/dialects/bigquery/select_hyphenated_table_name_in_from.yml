# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 09f04bb3080d62a6126486e51f3d46f9bbe86d5d62633cac33dc81dded2d3883
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
              - identifier: project
              - dash: '-'
              - identifier: a
              - dot: .
              - identifier: dataset
              - dash: '-'
              - identifier: b
              - dot: .
              - identifier: table
              - dash: '-'
              - identifier: c
          join_clause:
          - keyword: JOIN
          - from_expression_element:
              table_expression:
                table_reference:
                - identifier: dataset
                - dash: '-'
                - identifier: c
                - dot: .
                - identifier: table
                - dash: '-'
                - identifier: d
          - keyword: USING
          - bracketed:
              start_bracket: (
              identifier: a
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          expression:
          - column_reference:
              identifier: col1
          - binary_operator: '-'
          - column_reference:
              identifier: col2
          alias_expression:
            keyword: AS
            identifier: newcol1
      - comma: ','
      - select_clause_element:
          expression:
          - column_reference:
              identifier: col1
          - binary_operator: '-'
          - column_reference:
              identifier: col2
          alias_expression:
            keyword: AS
            identifier: newcol2
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
              - identifier: table
              - dash: '-'
              - identifier: a123
- statement_terminator: ;
