# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 107b92d6e0fc3978121b3b9bcb3abb21c66fd9106f8dd1afac4dd490903914fd
file:
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
        identifier: books
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: title
      - comma: ','
      - column_reference:
          identifier: author
      - end_bracket: )
    - values_clause:
        keyword: VALUES
        bracketed:
        - start_bracket: (
        - expression:
            literal: "'The Great Gatsby'"
        - comma: ','
        - expression:
            literal: "'F. Scott Fitzgerald'"
        - end_bracket: )
- statement_terminator: ;
- statement:
    insert_statement:
      keyword: INSERT
      table_reference:
        identifier: books
      bracketed:
      - start_bracket: (
      - column_reference:
          identifier: title
      - comma: ','
      - column_reference:
          identifier: author
      - end_bracket: )
      values_clause:
        keyword: VALUES
        bracketed:
        - start_bracket: (
        - expression:
            literal: "'The Great Gatsby'"
        - comma: ','
        - expression:
            literal: "'F. Scott Fitzgerald'"
        - end_bracket: )
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
        identifier: '`project.dataset.table`'
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
            keyword: SELECT
            select_clause_element:
              wildcard_expression:
                wildcard_identifier:
                  star: '*'
          from_clause:
            keyword: FROM
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    identifier: table1
        end_bracket: )
- statement_terminator: ;
