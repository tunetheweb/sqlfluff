# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: bf1d5ec42281fca64ab0f0004ba38487528abf4d960262eb5327e5403a2553b6
file:
  statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
      - identifier: sandbox_db
      - dot: .
      - identifier: Org_Descendant
    - bracketed:
      - start_bracket: (
      - column_definition:
          column_reference:
            identifier: Org_Unit_Code
          data_type:
            data_type_identifier: char
            bracketed:
              start_bracket: (
              expression:
                literal: '6'
              end_bracket: )
          td_column_attribute_constraint:
          - keyword: character
          - keyword: set
          - identifier: unicode
          column_constraint_segment:
          - keyword: not
          - keyword: 'null'
      - comma: ','
      - column_definition:
          column_reference:
            identifier: Org_Unit_Type
          data_type:
            data_type_identifier: char
            bracketed:
              start_bracket: (
              expression:
                literal: '3'
              end_bracket: )
          td_column_attribute_constraint:
          - keyword: character
          - keyword: set
          - identifier: unicode
          column_constraint_segment:
          - keyword: not
          - keyword: 'null'
      - comma: ','
      - column_definition:
          column_reference:
            identifier: Entity_Code
          data_type:
            data_type_identifier: varchar
            bracketed:
              start_bracket: (
              expression:
                literal: '10'
              end_bracket: )
          td_column_attribute_constraint:
            keyword: uppercase
          column_constraint_segment:
          - keyword: not
          - keyword: 'null'
      - comma: ','
      - column_definition:
          column_reference:
            identifier: Parent_Org_Unit_Code
          data_type:
            data_type_identifier: char
            bracketed:
              start_bracket: (
              expression:
                literal: '6'
              end_bracket: )
          td_column_attribute_constraint:
          - keyword: character
          - keyword: set
          - identifier: unicode
          column_constraint_segment:
          - keyword: not
          - keyword: 'null'
      - comma: ','
      - column_definition:
          column_reference:
            identifier: Parent_Org_Unit_Type
          data_type:
            data_type_identifier: char
            bracketed:
              start_bracket: (
              expression:
                literal: '3'
              end_bracket: )
          td_column_attribute_constraint:
          - keyword: character
          - keyword: set
          - identifier: unicode
          column_constraint_segment:
          - keyword: not
          - keyword: 'null'
      - comma: ','
      - column_definition:
          column_reference:
            identifier: Parent_Entity_Code
          data_type:
            data_type_identifier: varchar
            bracketed:
              start_bracket: (
              expression:
                literal: '10'
              end_bracket: )
          td_column_attribute_constraint:
            keyword: uppercase
          column_constraint_segment:
          - keyword: not
          - keyword: 'null'
      - end_bracket: )
    - td_table_constraint:
      - keyword: primary
      - keyword: index
      - object_reference:
          identifier: Org_Descendant_NUPI
      - bracketed:
        - start_bracket: (
        - identifier: Org_Unit_Code
        - comma: ','
        - identifier: Org_Unit_Type
        - comma: ','
        - identifier: Entity_Code
        - end_bracket: )
  statement_terminator: ;
