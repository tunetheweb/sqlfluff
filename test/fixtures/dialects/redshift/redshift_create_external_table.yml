# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 6bcbb12f775b9554e6c61b3abf5647f272e6fd5324724990a094744855d097d3
file:
- statement:
    create_external_table_statement:
    - keyword: CREATE
    - keyword: EXTERNAL
    - keyword: TABLE
    - table_reference:
      - identifier: external_schema
      - dot: .
      - identifier: table_name
    - bracketed:
        start_bracket: (
        column_reference:
          identifier: col1
        data_type:
          keyword: INTEGER
        end_bracket: )
    - keyword: STORED
    - keyword: AS
    - keyword: PARQUET
    - keyword: LOCATION
    - literal: "'s3://bucket/folder'"
- statement_terminator: ;
- statement:
    create_external_table_statement:
    - keyword: CREATE
    - keyword: EXTERNAL
    - keyword: TABLE
    - table_reference:
      - identifier: external_schema
      - dot: .
      - identifier: table_name
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: col1
      - data_type:
          keyword: INTEGER
      - comma: ','
      - column_reference:
          identifier: col2
      - data_type:
          keyword: TEXT
      - end_bracket: )
    - keyword: STORED
    - keyword: AS
    - keyword: PARQUET
    - keyword: LOCATION
    - literal: "'s3://bucket/folder'"
- statement_terminator: ;
- statement:
    create_external_table_statement:
    - keyword: CREATE
    - keyword: EXTERNAL
    - keyword: TABLE
    - table_reference:
      - identifier: external_schema
      - dot: .
      - identifier: table_name
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: col1
      - data_type:
          keyword: INTEGER
      - comma: ','
      - column_reference:
          identifier: col2
      - data_type:
          keyword: TEXT
      - end_bracket: )
    - keyword: STORED
    - keyword: AS
    - keyword: ORC
    - keyword: LOCATION
    - literal: "'s3://bucket/folder'"
- statement_terminator: ;
- statement:
    create_external_table_statement:
    - keyword: CREATE
    - keyword: EXTERNAL
    - keyword: TABLE
    - table_reference:
      - identifier: external_schema
      - dot: .
      - identifier: table_name
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: col1
      - data_type:
          keyword: INTEGER
      - comma: ','
      - column_reference:
          identifier: col2
      - data_type:
          keyword: TEXT
      - end_bracket: )
    - keyword: STORED
    - keyword: AS
    - keyword: AVRO
    - keyword: LOCATION
    - literal: "'s3://bucket/folder'"
- statement_terminator: ;
- statement:
    create_external_table_statement:
    - keyword: CREATE
    - keyword: EXTERNAL
    - keyword: TABLE
    - table_reference:
      - identifier: external_schema
      - dot: .
      - identifier: table_name
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: col1
      - data_type:
          keyword: INTEGER
      - comma: ','
      - column_reference:
          identifier: col2
      - data_type:
          keyword: TEXT
      - end_bracket: )
    - keyword: STORED
    - keyword: AS
    - keyword: TEXTFILE
    - keyword: LOCATION
    - literal: "'s3://bucket/folder'"
- statement_terminator: ;
- statement:
    create_external_table_statement:
    - keyword: CREATE
    - keyword: EXTERNAL
    - keyword: TABLE
    - table_reference:
      - identifier: external_schema
      - dot: .
      - identifier: table_name
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: col1
      - data_type:
          keyword: INTEGER
      - comma: ','
      - column_reference:
          identifier: col2
      - data_type:
          keyword: TEXT
      - end_bracket: )
    - partitioned_by_segment:
      - keyword: PARTITIONED
      - keyword: BY
      - bracketed:
          start_bracket: (
          column_reference:
            identifier: col3
          data_type:
            keyword: integer
          end_bracket: )
    - keyword: STORED
    - keyword: AS
    - keyword: PARQUET
    - keyword: LOCATION
    - literal: "'s3://bucket/folder'"
- statement_terminator: ;
- statement:
    create_external_table_statement:
    - keyword: CREATE
    - keyword: EXTERNAL
    - keyword: TABLE
    - table_reference:
      - identifier: external_schema
      - dot: .
      - identifier: table_name
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: col1
      - data_type:
          keyword: INTEGER
      - comma: ','
      - column_reference:
          identifier: col2
      - data_type:
          keyword: TEXT
      - end_bracket: )
    - partitioned_by_segment:
      - keyword: PARTITIONED
      - keyword: BY
      - bracketed:
        - start_bracket: (
        - column_reference:
            identifier: col3
        - data_type:
            keyword: INTEGER
        - comma: ','
        - column_reference:
            identifier: col4
        - data_type:
            keyword: INTEGER
        - end_bracket: )
    - keyword: STORED
    - keyword: AS
    - keyword: PARQUET
    - keyword: LOCATION
    - literal: "'s3://bucket/folder'"
- statement_terminator: ;
- statement:
    create_external_table_statement:
    - keyword: CREATE
    - keyword: EXTERNAL
    - keyword: TABLE
    - table_reference:
      - identifier: external_schema
      - dot: .
      - identifier: table_name
    - bracketed:
        start_bracket: (
        column_reference:
          identifier: col1
        data_type:
          keyword: INTEGER
        end_bracket: )
    - keyword: STORED
    - keyword: AS
    - keyword: PARQUET
    - keyword: LOCATION
    - literal: "'s3://bucket/folder'"
    - keyword: TABLE
    - keyword: PROPERTIES
    - bracketed:
      - start_bracket: (
      - literal: "'some_property1'"
      - comparison_operator:
          raw_comparison_operator: '='
      - literal: "'some_value1'"
      - comma: ','
      - literal: "'some_property2'"
      - comparison_operator:
          raw_comparison_operator: '='
      - literal: "'some_value2'"
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_external_table_statement:
    - keyword: create
    - keyword: external
    - keyword: table
    - table_reference:
      - identifier: spectrum
      - dot: .
      - identifier: sales
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: salesid
      - data_type:
          keyword: integer
      - comma: ','
      - column_reference:
          identifier: saledate
      - data_type:
          datetime_type_identifier:
            keyword: date
      - comma: ','
      - column_reference:
          identifier: qtysold
      - data_type:
          keyword: smallint
      - comma: ','
      - column_reference:
          identifier: pricepaid
      - data_type:
          keyword: decimal
          bracketed:
          - start_bracket: (
          - literal: '8'
          - comma: ','
          - literal: '2'
          - end_bracket: )
      - comma: ','
      - column_reference:
          identifier: saletime
      - data_type:
          datetime_type_identifier:
            keyword: timestamp
      - end_bracket: )
    - keyword: row
    - keyword: format
    - keyword: delimited
    - row_format_deimited_segment:
      - keyword: fields
      - keyword: terminated
      - keyword: by
      - literal: "'\\t'"
    - keyword: stored
    - keyword: as
    - keyword: textfile
    - keyword: location
    - literal: "'s3://awssampledbuswest2/tickit/spectrum/sales/'"
    - keyword: table
    - keyword: properties
    - bracketed:
      - start_bracket: (
      - literal: "'numRows'"
      - comparison_operator:
          raw_comparison_operator: '='
      - literal: "'170000'"
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_external_table_statement:
    - keyword: create
    - keyword: external
    - keyword: table
    - table_reference:
      - identifier: spectrum
      - dot: .
      - identifier: cloudtrail_json
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: event_version
      - data_type:
          keyword: int
      - comma: ','
      - column_reference:
          identifier: event_id
      - data_type:
          keyword: bigint
      - comma: ','
      - column_reference:
          identifier: event_time
      - data_type:
          datetime_type_identifier:
            keyword: timestamp
      - comma: ','
      - column_reference:
          identifier: event_type
      - data_type:
          keyword: varchar
          bracketed:
            start_bracket: (
            literal: '10'
            end_bracket: )
      - comma: ','
      - column_reference:
          identifier: recipientaccountid
      - data_type:
          keyword: bigint
      - end_bracket: )
    - keyword: row
    - keyword: format
    - keyword: serde
    - literal: "'org.openx.data.jsonserde.JsonSerDe'"
    - keyword: with
    - keyword: serdeproperties
    - bracketed:
      - start_bracket: (
      - literal: "'dots.in.keys'"
      - comparison_operator:
          raw_comparison_operator: '='
      - literal: "'true'"
      - comma: ','
      - literal: "'mapping.requesttime'"
      - comparison_operator:
          raw_comparison_operator: '='
      - literal: "'requesttimestamp'"
      - end_bracket: )
    - keyword: stored
    - keyword: as
    - keyword: textfile
    - keyword: location
    - literal: "'s3://mybucket/json/cloudtrail'"
- statement_terminator: ;
- statement:
    create_external_table_statement:
    - keyword: CREATE
    - keyword: EXTERNAL
    - keyword: TABLE
    - table_reference:
      - identifier: schema_spectrum_uddh
      - dot: .
      - identifier: soccer_league
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: league_rank
      - data_type:
          keyword: smallint
      - comma: ','
      - column_reference:
          identifier: club_name
      - data_type:
          keyword: varchar
          bracketed:
            start_bracket: (
            literal: '15'
            end_bracket: )
      - comma: ','
      - column_reference:
          identifier: league_spi
      - data_type:
          keyword: decimal
          bracketed:
          - start_bracket: (
          - literal: '6'
          - comma: ','
          - literal: '2'
          - end_bracket: )
      - comma: ','
      - column_reference:
          identifier: league_nspi
      - data_type:
          keyword: smallint
      - end_bracket: )
    - keyword: ROW
    - keyword: FORMAT
    - keyword: DELIMITED
    - row_format_deimited_segment:
      - keyword: FIELDS
      - keyword: TERMINATED
      - keyword: BY
      - literal: "','"
      - keyword: LINES
      - keyword: TERMINATED
      - keyword: BY
      - literal: "'\\n\\l'"
    - keyword: stored
    - keyword: as
    - keyword: textfile
    - keyword: LOCATION
    - literal: "'s3://spectrum-uddh/league/'"
    - keyword: table
    - keyword: properties
    - bracketed:
      - start_bracket: (
      - literal: "'skip.header.line.count'"
      - comparison_operator:
          raw_comparison_operator: '='
      - literal: "'1'"
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_external_table_statement:
    - keyword: CREATE
    - keyword: EXTERNAL
    - keyword: TABLE
    - table_reference:
        identifier: tbl1
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: col1
      - data_type:
          keyword: int
      - comma: ','
      - column_reference:
          identifier: col2
      - data_type:
          keyword: varchar
          bracketed:
            start_bracket: (
            literal: '10'
            end_bracket: )
      - end_bracket: )
    - keyword: ROW
    - keyword: FORMAT
    - keyword: SERDE
    - literal: "'com.amazon.ionhiveserde.IonHiveSerDe'"
    - keyword: STORED
    - keyword: AS
    - keyword: INPUTFORMAT
    - literal: "'com.amazon.ionhiveserde.formats.IonInputFormat'"
    - keyword: OUTPUTFORMAT
    - literal: "'com.amazon.ionhiveserde.formats.IonOutputFormat'"
    - keyword: LOCATION
    - literal: "'s3://s3-bucket/prefix'"
- statement_terminator: ;
- statement:
    create_external_table_statement:
    - keyword: CREATE
    - keyword: EXTERNAL
    - keyword: TABLE
    - table_reference:
      - identifier: spectrum
      - dot: .
      - identifier: partitioned_lineitem
    - partitioned_by_segment:
      - keyword: PARTITIONED
      - keyword: BY
      - bracketed:
        - start_bracket: (
        - column_reference:
            identifier: l_shipdate
        - comma: ','
        - column_reference:
            identifier: l_shipmode
        - end_bracket: )
    - keyword: STORED
    - keyword: AS
    - keyword: parquet
    - keyword: LOCATION
    - literal: "'S3://mybucket/cetas/partitioned_lineitem/'"
    - keyword: AS
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            literal: '1'
- statement_terminator: ;
