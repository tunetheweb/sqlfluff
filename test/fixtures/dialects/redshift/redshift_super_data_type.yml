# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: b16dfd012256a556b2987b513a67526db9dd2bf2a936507fd1ce9d2c719583a2
file:
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
        - column_reference:
            identifier: c
        - array_accessor:
            start_square_bracket: '['
            literal: '0'
            end_square_bracket: ']'
        - dot: .
        - column_reference:
            identifier: col
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: o
      from_clause:
      - keyword: FROM
      - from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: customer_orders
            alias_expression:
              identifier: c
      - comma: ','
      - from_expression:
          from_expression_element:
            table_expression:
              table_reference:
              - identifier: c
              - dot: .
              - identifier: c_orders
            alias_expression:
              identifier: o
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: COUNT
            bracketed:
              start_bracket: (
              star: '*'
              end_bracket: )
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: customer_orders_lineitem
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            identifier: c_orders
        - array_accessor:
            start_square_bracket: '['
            literal: '0'
            end_square_bracket: ']'
        - dot: .
        - column_reference:
            identifier: o_orderkey
        - keyword: IS
        - keyword: NOT
        - keyword: 'NULL'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          column_reference:
            identifier: c_custkey
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: customer_orders_lineitem
      where_clause:
        keyword: WHERE
        expression:
          case_expression:
          - keyword: CASE
          - when_clause:
            - keyword: WHEN
            - expression:
                function:
                  function_name:
                    function_name_identifier: JSON_TYPEOF
                  bracketed:
                    start_bracket: (
                    expression:
                    - column_reference:
                        identifier: c_orders
                    - array_accessor:
                        start_square_bracket: '['
                        literal: '0'
                        end_square_bracket: ']'
                    - dot: .
                    - column_reference:
                        identifier: o_orderstatus
                    end_bracket: )
                comparison_operator:
                  raw_comparison_operator: '='
                literal: "'string'"
            - keyword: THEN
            - expression:
              - column_reference:
                  identifier: c_orders
              - array_accessor:
                  start_square_bracket: '['
                  literal: '0'
                  end_square_bracket: ']'
              - dot: .
              - column_reference:
                  identifier: o_orderstatus
              - cast_expression:
                  casting_operator: '::'
                  data_type:
                    keyword: VARCHAR
              - comparison_operator:
                - raw_comparison_operator: <
                - raw_comparison_operator: '='
              - literal: "'P'"
          - else_clause:
              keyword: ELSE
              expression:
                literal: 'NULL'
          - keyword: END
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
        - column_reference:
            identifier: c
        - array_accessor:
          - start_square_bracket: '['
          - literal: '0'
          - end_square_bracket: ']'
          - start_square_bracket: '['
          - literal: '1'
          - end_square_bracket: ']'
          - start_square_bracket: '['
          - literal: '2'
          - end_square_bracket: ']'
          - start_square_bracket: '['
          - literal: '3'
          - end_square_bracket: ']'
          - start_square_bracket: '['
          - literal: '4'
          - end_square_bracket: ']'
        - dot: .
        - column_reference:
            identifier: col
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: o
      from_clause:
      - keyword: FROM
      - from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: customer_orders
            alias_expression:
              identifier: c
      - comma: ','
      - from_expression:
          from_expression_element:
            table_expression:
              table_reference:
              - identifier: c
              - dot: .
              - identifier: c_orders
            alias_expression:
              identifier: o
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              identifier: c
              dot: .
              star: '*'
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: o
      from_clause:
      - keyword: FROM
      - from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: customer_orders_lineitem
            alias_expression:
              identifier: c
      - comma: ','
      - from_expression:
          from_expression_element:
            table_expression:
              table_reference:
              - identifier: c
              - dot: .
              - identifier: c_orders
            alias_expression:
              identifier: o
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
        - column_reference:
            identifier: messages
        - array_accessor:
            start_square_bracket: '['
            literal: '0'
            end_square_bracket: ']'
        - dot: .
        - column_reference:
            identifier: format
      - comma: ','
      - select_clause_element:
        - column_reference:
            identifier: messages
        - array_accessor:
            start_square_bracket: '['
            literal: '0'
            end_square_bracket: ']'
        - dot: .
        - column_reference:
            identifier: topic
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: subscription_auto
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            identifier: messages
        - array_accessor:
            start_square_bracket: '['
            literal: '0'
            end_square_bracket: ']'
        - dot: .
        - column_reference:
          - identifier: payload
          - dot: .
          - identifier: payload
          - dot: .
          - identifier: '"assetId"'
        - comparison_operator:
            raw_comparison_operator: '>'
        - literal: '0'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
        - column_reference:
            identifier: messages
        - array_accessor:
            start_square_bracket: '['
            literal: '0'
            end_square_bracket: ']'
        - dot: .
        - column_reference:
            identifier: format
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: COUNT
            bracketed:
              start_bracket: (
              expression:
              - column_reference:
                  identifier: messages
              - array_accessor:
                  start_square_bracket: '['
                  literal: '0'
                  end_square_bracket: ']'
              - dot: .
              - column_reference:
                  identifier: topic
              end_bracket: )
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: subscription_auto
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            identifier: messages
        - array_accessor:
            start_square_bracket: '['
            literal: '0'
            end_square_bracket: ']'
        - dot: .
        - column_reference:
          - identifier: payload
          - dot: .
          - identifier: payload
          - dot: .
          - identifier: '"assetId"'
        - comparison_operator:
            raw_comparison_operator: '>'
        - literal: "'abc'"
      groupby_clause:
      - keyword: GROUP
      - keyword: BY
      - column_reference:
          identifier: messages
      - array_accessor:
          start_square_bracket: '['
          literal: '0'
          end_square_bracket: ']'
      - dot: .
      - column_reference:
          identifier: format
- statement_terminator: ;
