# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: bfc4b7136cc562e8ed26d85f398dbe6dbad115a7cb3565b36ae881e707296ebe
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            column_reference:
              identifier: b
            cast_expression:
              casting_operator: '::'
              data_type:
                datetime_type_identifier:
                  keyword: DATETIME
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: a
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            column_reference:
              identifier: b
            cast_expression:
              casting_operator: '::'
              data_type:
                datetime_type_identifier:
                  keyword: DATE
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: a
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          expression:
            column_reference:
              identifier: b
            cast_expression:
              casting_operator: '::'
              data_type:
                datetime_type_identifier:
                  keyword: TIME
      - comma: ','
      - select_clause_element:
          expression:
            column_reference:
              identifier: c
            cast_expression:
              casting_operator: '::'
              data_type:
                datetime_type_identifier:
                - keyword: TIME
                - keyword: WITH
                - keyword: TIME
                - keyword: ZONE
      - comma: ','
      - select_clause_element:
          expression:
            column_reference:
              identifier: d
            cast_expression:
              casting_operator: '::'
              data_type:
                datetime_type_identifier:
                - keyword: TIME
                - keyword: WITHOUT
                - keyword: TIME
                - keyword: ZONE
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: a
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            column_reference:
              identifier: b
            cast_expression:
              casting_operator: '::'
              data_type:
                datetime_type_identifier:
                  keyword: TIMETZ
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: a
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          expression:
            column_reference:
              identifier: b
            cast_expression:
              casting_operator: '::'
              data_type:
                datetime_type_identifier:
                  keyword: TIMESTAMP
      - comma: ','
      - select_clause_element:
          expression:
            column_reference:
              identifier: c
            cast_expression:
              casting_operator: '::'
              data_type:
                datetime_type_identifier:
                - keyword: TIMESTAMP
                - keyword: WITHOUT
                - keyword: TIME
                - keyword: ZONE
      - comma: ','
      - select_clause_element:
          expression:
            column_reference:
              identifier: d
            cast_expression:
              casting_operator: '::'
              data_type:
                datetime_type_identifier:
                - keyword: TIMESTAMP
                - keyword: WITH
                - keyword: TIME
                - keyword: ZONE
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: a
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            column_reference:
              identifier: b
            cast_expression:
              casting_operator: '::'
              data_type:
                datetime_type_identifier:
                  keyword: TIMESTAMPTZ
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: a
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          expression:
            column_reference:
            - identifier: raw_data
            - dot: .
            - identifier: status
            cast_expression:
              casting_operator: '::'
              data_type:
                keyword: VARCHAR
          alias_expression:
            keyword: AS
            identifier: status
      - comma: ','
      - select_clause_element:
          expression:
            column_reference:
            - identifier: raw_data
            - dot: .
            - identifier: start
            cast_expression:
              casting_operator: '::'
              data_type:
                datetime_type_identifier:
                  keyword: TIMESTAMPTZ
            time_zone_grammar:
            - keyword: AT
            - keyword: TIME
            - keyword: ZONE
            - expression:
                literal: "'UTC'"
          alias_expression:
            keyword: AS
            identifier: started_at
      - comma: ','
      - select_clause_element:
          expression:
            column_reference:
            - identifier: raw_data
            - dot: .
            - identifier: '"end"'
            cast_expression:
              casting_operator: '::'
              data_type:
                datetime_type_identifier:
                  keyword: TIMESTAMPTZ
            time_zone_grammar:
            - keyword: AT
            - keyword: TIME
            - keyword: ZONE
            - expression:
                literal: "'UTC'"
          alias_expression:
            keyword: AS
            identifier: ended_at
      - comma: ','
      - select_clause_element:
          expression:
            column_reference:
            - identifier: raw_data
            - dot: .
            - identifier: created
            cast_expression:
              casting_operator: '::'
              data_type:
                datetime_type_identifier:
                  keyword: TIMESTAMPTZ
            time_zone_grammar:
            - keyword: AT
            - keyword: TIME
            - keyword: ZONE
            - expression:
                literal: "'UTC'"
          alias_expression:
            keyword: AS
            identifier: created_at
      - comma: ','
      - select_clause_element:
          expression:
          - column_reference:
            - identifier: raw_data
            - dot: .
            - identifier: identifier
          - array_accessor:
              start_square_bracket: '['
              literal: '0'
              end_square_bracket: ']'
          - dot: .
          - column_reference:
              identifier: value
          - cast_expression:
              casting_operator: '::'
              data_type:
                keyword: VARCHAR
          alias_expression:
            keyword: AS
            identifier: communication_request_fhir_reference_origin
      - comma: ','
      - select_clause_element:
          column_reference:
          - identifier: extension_extraction
          - dot: .
          - identifier: database_reference
      - comma: ','
      - select_clause_element:
          expression:
            function:
              function_name:
                function_name_identifier: GETDATE
              bracketed:
                start_bracket: (
                end_bracket: )
            time_zone_grammar:
            - keyword: AT
            - keyword: TIME
            - keyword: ZONE
            - expression:
                literal: "'UTC'"
      - comma: ','
      - select_clause_element:
          expression:
            bracketed:
              start_bracket: (
              expression:
                function:
                  function_name:
                    function_name_identifier: GETDATE
                  bracketed:
                    start_bracket: (
                    end_bracket: )
                time_zone_grammar:
                - keyword: AT
                - keyword: TIME
                - keyword: ZONE
                - expression:
                    literal: "'UTC'"
              end_bracket: )
            time_zone_grammar:
            - keyword: AT
            - keyword: TIME
            - keyword: ZONE
            - expression:
                literal: "'AEST'"
      - comma: ','
      - select_clause_element:
          expression:
            bracketed:
              start_bracket: (
              expression:
                bracketed:
                  start_bracket: (
                  expression:
                    function:
                      function_name:
                        function_name_identifier: GETDATE
                      bracketed:
                        start_bracket: (
                        end_bracket: )
                    time_zone_grammar:
                    - keyword: AT
                    - keyword: TIME
                    - keyword: ZONE
                    - expression:
                        literal: "'UTC'"
                  end_bracket: )
                time_zone_grammar:
                - keyword: AT
                - keyword: TIME
                - keyword: ZONE
                - expression:
                    literal: "'AEST'"
              end_bracket: )
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: raw_data
