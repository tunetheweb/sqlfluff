# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 18eae966c89e42a090d0cd0e3b7e0a92443577fcf599a5f0325205305564c68f
file:
- statement:
    delete_statement:
    - keyword: DELETE
    - keyword: FROM
    - table_reference:
        identifier: films
- statement_terminator: ;
- statement:
    delete_statement:
    - keyword: DELETE
    - keyword: FROM
    - keyword: ONLY
    - table_reference:
        identifier: films
- statement_terminator: ;
- statement:
    delete_statement:
    - keyword: DELETE
    - keyword: FROM
    - table_reference:
        identifier: films
    - star: '*'
- statement_terminator: ;
- statement:
    delete_statement:
    - keyword: DELETE
    - keyword: FROM
    - table_reference:
        identifier: films
    - alias_expression:
        keyword: AS
        identifier: f
- statement_terminator: ;
- statement:
    delete_statement:
    - keyword: DELETE
    - keyword: FROM
    - table_reference:
        identifier: films
    - alias_expression:
        identifier: f
- statement_terminator: ;
- statement:
    delete_statement:
    - keyword: DELETE
    - keyword: FROM
    - table_reference:
        identifier: films
    - keyword: USING
    - table_expression:
        table_reference:
          identifier: producers
    - where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            identifier: producer_id
        - comparison_operator:
            raw_comparison_operator: '='
        - column_reference:
          - identifier: producers
          - dot: .
          - identifier: id
        - binary_operator: AND
        - column_reference:
          - identifier: producers
          - dot: .
          - identifier: name
        - comparison_operator:
            raw_comparison_operator: '='
        - literal: "'foo'"
- statement_terminator: ;
- statement:
    delete_statement:
    - keyword: DELETE
    - keyword: FROM
    - table_reference:
        identifier: films
    - alias_expression:
        keyword: AS
        identifier: f
    - keyword: USING
    - table_expression:
        table_reference:
          identifier: producers
    - alias_expression:
        keyword: AS
        identifier: p
    - where_clause:
        keyword: WHERE
        expression:
        - column_reference:
          - identifier: f
          - dot: .
          - identifier: producer_id
        - comparison_operator:
            raw_comparison_operator: '='
        - column_reference:
          - identifier: p
          - dot: .
          - identifier: id
        - binary_operator: AND
        - column_reference:
          - identifier: p
          - dot: .
          - identifier: name
        - comparison_operator:
            raw_comparison_operator: '='
        - literal: "'foo'"
- statement_terminator: ;
- statement:
    delete_statement:
    - keyword: DELETE
    - keyword: FROM
    - table_reference:
        identifier: films
    - alias_expression:
        keyword: AS
        identifier: f
    - keyword: USING
    - table_expression:
        table_reference:
          identifier: producers
    - alias_expression:
        keyword: AS
        identifier: p
    - comma: ','
    - table_expression:
        table_reference:
          identifier: actors
    - alias_expression:
        keyword: AS
        identifier: a
    - where_clause:
        keyword: WHERE
        expression:
        - column_reference:
          - identifier: f
          - dot: .
          - identifier: producer_id
        - comparison_operator:
            raw_comparison_operator: '='
        - column_reference:
          - identifier: p
          - dot: .
          - identifier: id
        - binary_operator: AND
        - column_reference:
          - identifier: p
          - dot: .
          - identifier: name
        - comparison_operator:
            raw_comparison_operator: '='
        - literal: "'foo'"
        - binary_operator: AND
        - column_reference:
          - identifier: f
          - dot: .
          - identifier: actor_id
        - comparison_operator:
            raw_comparison_operator: '='
        - column_reference:
          - identifier: a
          - dot: .
          - identifier: id
        - binary_operator: AND
        - column_reference:
          - identifier: a
          - dot: .
          - identifier: name
        - comparison_operator:
            raw_comparison_operator: '='
        - literal: "'joe cool'"
- statement_terminator: ;
- statement:
    delete_statement:
    - keyword: DELETE
    - keyword: FROM
    - table_reference:
        identifier: films
    - alias_expression:
        identifier: f
    - keyword: USING
    - table_expression:
        table_reference:
          identifier: producers
    - alias_expression:
        identifier: p
    - where_clause:
        keyword: WHERE
        expression:
        - column_reference:
          - identifier: f
          - dot: .
          - identifier: producer_id
        - comparison_operator:
            raw_comparison_operator: '='
        - column_reference:
          - identifier: p
          - dot: .
          - identifier: id
        - binary_operator: AND
        - column_reference:
          - identifier: p
          - dot: .
          - identifier: name
        - comparison_operator:
            raw_comparison_operator: '='
        - literal: "'foo'"
- statement_terminator: ;
- statement:
    delete_statement:
    - keyword: DELETE
    - keyword: FROM
    - table_reference:
        identifier: films
    - alias_expression:
        identifier: f
    - keyword: USING
    - table_expression:
        table_reference:
          identifier: producers
    - alias_expression:
        identifier: p
    - comma: ','
    - table_expression:
        table_reference:
          identifier: actors
    - alias_expression:
        identifier: a
    - where_clause:
        keyword: WHERE
        expression:
        - column_reference:
          - identifier: f
          - dot: .
          - identifier: producer_id
        - comparison_operator:
            raw_comparison_operator: '='
        - column_reference:
          - identifier: p
          - dot: .
          - identifier: id
        - binary_operator: AND
        - column_reference:
          - identifier: p
          - dot: .
          - identifier: name
        - comparison_operator:
            raw_comparison_operator: '='
        - literal: "'foo'"
        - binary_operator: AND
        - column_reference:
          - identifier: f
          - dot: .
          - identifier: actor_id
        - comparison_operator:
            raw_comparison_operator: '='
        - column_reference:
          - identifier: a
          - dot: .
          - identifier: id
        - binary_operator: AND
        - column_reference:
          - identifier: a
          - dot: .
          - identifier: name
        - comparison_operator:
            raw_comparison_operator: '='
        - literal: "'joe cool'"
- statement_terminator: ;
- statement:
    delete_statement:
    - keyword: DELETE
    - keyword: FROM
    - table_reference:
        identifier: tasks
    - keyword: WHERE
    - keyword: CURRENT
    - keyword: OF
    - object_reference:
        identifier: c_tasks
- statement_terminator: ;
- statement:
    delete_statement:
    - keyword: DELETE
    - keyword: FROM
    - table_reference:
        identifier: films
    - where_clause:
        keyword: WHERE
        expression:
          column_reference:
            identifier: kind
          comparison_operator:
          - raw_comparison_operator: <
          - raw_comparison_operator: '>'
          literal: "'Musical'"
- statement_terminator: ;
- statement:
    delete_statement:
    - keyword: DELETE
    - keyword: FROM
    - table_reference:
        identifier: tasks
    - where_clause:
        keyword: WHERE
        expression:
          column_reference:
            identifier: status
          comparison_operator:
            raw_comparison_operator: '='
          literal: "'DONE'"
    - keyword: RETURNING
    - star: '*'
- statement_terminator: ;
- statement:
    delete_statement:
    - keyword: DELETE
    - keyword: FROM
    - table_reference:
        identifier: tasks
    - where_clause:
        keyword: WHERE
        expression:
          column_reference:
            identifier: status
          comparison_operator:
            raw_comparison_operator: '='
          literal: "'DONE'"
    - keyword: RETURNING
    - expression:
        column_reference:
          identifier: actor_id
- statement_terminator: ;
- statement:
    delete_statement:
    - keyword: DELETE
    - keyword: FROM
    - table_reference:
        identifier: tasks
    - where_clause:
        keyword: WHERE
        expression:
          column_reference:
            identifier: status
          comparison_operator:
            raw_comparison_operator: '='
          literal: "'DONE'"
    - keyword: RETURNING
    - expression:
        column_reference:
          identifier: actor_id
    - alias_expression:
        keyword: as
        identifier: a_id
- statement_terminator: ;
- statement:
    delete_statement:
    - keyword: DELETE
    - keyword: FROM
    - table_reference:
        identifier: tasks
    - where_clause:
        keyword: WHERE
        expression:
          column_reference:
            identifier: status
          comparison_operator:
            raw_comparison_operator: '='
          literal: "'DONE'"
    - keyword: RETURNING
    - expression:
        column_reference:
          identifier: actor_id
    - alias_expression:
        identifier: a_id
- statement_terminator: ;
- statement:
    delete_statement:
    - keyword: DELETE
    - keyword: FROM
    - table_reference:
        identifier: tasks
    - where_clause:
        keyword: WHERE
        expression:
          column_reference:
            identifier: status
          comparison_operator:
            raw_comparison_operator: '='
          literal: "'DONE'"
    - keyword: RETURNING
    - expression:
        column_reference:
          identifier: actor_id
    - comma: ','
    - expression:
        column_reference:
          identifier: producer_id
- statement_terminator: ;
- statement:
    delete_statement:
    - keyword: DELETE
    - keyword: FROM
    - table_reference:
        identifier: tasks
    - where_clause:
        keyword: WHERE
        expression:
          column_reference:
            identifier: status
          comparison_operator:
            raw_comparison_operator: '='
          literal: "'DONE'"
    - keyword: RETURNING
    - expression:
        column_reference:
          identifier: actor_id
    - alias_expression:
        keyword: as
        identifier: a_id
    - comma: ','
    - expression:
        column_reference:
          identifier: producer_id
    - alias_expression:
        keyword: as
        identifier: p_id
- statement_terminator: ;
- statement:
    delete_statement:
    - keyword: DELETE
    - keyword: FROM
    - table_reference:
        identifier: tasks
    - where_clause:
        keyword: WHERE
        expression:
          column_reference:
            identifier: status
          comparison_operator:
            raw_comparison_operator: '='
          literal: "'DONE'"
    - keyword: RETURNING
    - expression:
        column_reference:
          identifier: actor_id
    - alias_expression:
        identifier: a_id
    - comma: ','
    - expression:
        column_reference:
          identifier: producer_id
    - alias_expression:
        identifier: p_id
- statement_terminator: ;
- statement:
    with_compound_statement:
      keyword: WITH
      common_table_expression:
        identifier: test
        keyword: as
        bracketed:
          start_bracket: (
          select_statement:
            select_clause:
              keyword: select
              select_clause_element:
                column_reference:
                  identifier: foo
            from_clause:
              keyword: from
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      identifier: bar
          end_bracket: )
      delete_statement:
      - keyword: DELETE
      - keyword: FROM
      - table_reference:
          identifier: films
- statement_terminator: ;
- statement:
    with_compound_statement:
    - keyword: WITH
    - keyword: RECURSIVE
    - common_table_expression:
      - identifier: t
      - bracketed:
          start_bracket: (
          identifier_list:
            identifier: n
          end_bracket: )
      - keyword: AS
      - bracketed:
          start_bracket: (
          set_expression:
            values_clause:
              keyword: VALUES
              bracketed:
                start_bracket: (
                expression:
                  literal: '1'
                end_bracket: )
            set_operator:
            - keyword: UNION
            - keyword: ALL
            select_statement:
              select_clause:
                keyword: SELECT
                select_clause_element:
                  expression:
                    column_reference:
                      identifier: n
                    binary_operator: +
                    literal: '1'
              from_clause:
                keyword: FROM
                from_expression:
                  from_expression_element:
                    table_expression:
                      table_reference:
                        identifier: t
              where_clause:
                keyword: WHERE
                expression:
                  column_reference:
                    identifier: n
                  comparison_operator:
                    raw_comparison_operator: <
                  literal: '100'
          end_bracket: )
    - delete_statement:
      - keyword: DELETE
      - keyword: FROM
      - table_reference:
          identifier: films
- statement_terminator: ;
