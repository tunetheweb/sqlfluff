# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 9c4fcc99db32bb75485502d6ca6c6f7fc2bfea986023d0b3c04df28e3c3619d1
file:
- statement:
    alter_domain_statement:
    - keyword: ALTER
    - keyword: DOMAIN
    - object_reference:
        identifier: zipcode
    - keyword: SET
    - keyword: NOT
    - keyword: 'NULL'
- statement_terminator: ;
- statement:
    alter_domain_statement:
    - keyword: ALTER
    - keyword: DOMAIN
    - object_reference:
        identifier: zipcode
    - keyword: DROP
    - keyword: NOT
    - keyword: 'NULL'
- statement_terminator: ;
- statement:
    alter_domain_statement:
    - keyword: ALTER
    - keyword: DOMAIN
    - object_reference:
        identifier: zipcode
    - keyword: ADD
    - keyword: CONSTRAINT
    - object_reference:
        identifier: zipchk
    - keyword: CHECK
    - expression:
        bracketed:
          start_bracket: (
          expression:
            function:
              function_name:
                function_name_identifier: char_length
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    identifier: VALUE
                end_bracket: )
            comparison_operator:
              raw_comparison_operator: '='
            literal: '5'
          end_bracket: )
- statement_terminator: ;
- statement:
    alter_domain_statement:
    - keyword: ALTER
    - keyword: DOMAIN
    - object_reference:
        identifier: zipcode
    - keyword: DROP
    - keyword: CONSTRAINT
    - object_reference:
        identifier: zipchk
- statement_terminator: ;
- statement:
    alter_domain_statement:
    - keyword: ALTER
    - keyword: DOMAIN
    - object_reference:
        identifier: zipcode
    - keyword: RENAME
    - keyword: CONSTRAINT
    - object_reference:
        identifier: zipchk
    - keyword: TO
    - object_reference:
        identifier: zip_check
- statement_terminator: ;
- statement:
    alter_domain_statement:
    - keyword: ALTER
    - keyword: DOMAIN
    - object_reference:
        identifier: zipcode
    - keyword: SET
    - keyword: SCHEMA
    - object_reference:
        identifier: customers
- statement_terminator: ;
- statement:
    alter_domain_statement:
    - keyword: alter
    - keyword: domain
    - object_reference:
        identifier: oname
    - keyword: add
    - keyword: constraint
    - object_reference:
        identifier: '"test"'
    - keyword: check
    - expression:
        bracketed:
          start_bracket: (
          expression:
            function:
              function_name:
                function_name_identifier: length
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    identifier: value
                end_bracket: )
            comparison_operator:
              raw_comparison_operator: <
            literal: '512'
          end_bracket: )
- statement_terminator: ;
