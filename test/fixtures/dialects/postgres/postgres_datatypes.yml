# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: d7648994cc6e09b2890a11eda0ecead1b48fd70a81791ffc7236b9315468faa3
file:
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: a
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: a
      - data_type:
          keyword: smallint
      - comma: ','
      - column_reference:
          identifier: b
      - data_type:
          keyword: integer
      - comma: ','
      - column_reference:
          identifier: ba
      - data_type:
          keyword: int2
      - comma: ','
      - column_reference:
          identifier: bb
      - data_type:
          keyword: int4
      - comma: ','
      - column_reference:
          identifier: bc
      - data_type:
          keyword: int8
      - comma: ','
      - column_reference:
          identifier: bd
      - data_type:
          keyword: int
      - comma: ','
      - column_reference:
          identifier: c
      - data_type:
          keyword: bigint
      - comma: ','
      - column_reference:
          identifier: d
      - data_type:
          keyword: real
      - comma: ','
      - column_reference:
          identifier: e
      - data_type:
        - keyword: double
        - keyword: precision
      - comma: ','
      - column_reference:
          identifier: f
      - data_type:
          keyword: smallserial
      - comma: ','
      - column_reference:
          identifier: g
      - data_type:
          keyword: serial
      - comma: ','
      - column_reference:
          identifier: ga
      - data_type:
          keyword: serial2
      - comma: ','
      - column_reference:
          identifier: gb
      - data_type:
          keyword: serial4
      - comma: ','
      - column_reference:
          identifier: gc
      - data_type:
          keyword: serial8
      - comma: ','
      - column_reference:
          identifier: h
      - data_type:
          keyword: bigserial
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: b
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: a
      - data_type:
          keyword: float
      - comma: ','
      - column_reference:
          identifier: b
      - data_type:
          keyword: float
          bracketed:
            start_bracket: (
            literal: '24'
            end_bracket: )
      - comma: ','
      - column_reference:
          identifier: c
      - data_type:
          keyword: float4
      - comma: ','
      - column_reference:
          identifier: e
      - data_type:
          keyword: float8
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: c
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: a
      - data_type:
          keyword: numeric
      - comma: ','
      - column_reference:
          identifier: aa
      - data_type:
          keyword: decimal
      - comma: ','
      - column_reference:
          identifier: b
      - data_type:
          keyword: numeric
          bracketed:
            start_bracket: (
            literal: '7'
            end_bracket: )
      - comma: ','
      - column_reference:
          identifier: ba
      - data_type:
          keyword: decimal
          bracketed:
            start_bracket: (
            literal: '7'
            end_bracket: )
      - comma: ','
      - column_reference:
          identifier: c
      - data_type:
          keyword: numeric
          bracketed:
          - start_bracket: (
          - literal: '7'
          - comma: ','
          - literal: '2'
          - end_bracket: )
      - comma: ','
      - column_reference:
          identifier: ca
      - data_type:
          keyword: decimal
          bracketed:
          - start_bracket: (
          - literal: '7'
          - comma: ','
          - literal: '2'
          - end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: d
    - bracketed:
        start_bracket: (
        column_reference:
          identifier: a
        data_type:
          keyword: money
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: e
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: a
      - data_type:
          keyword: char
      - comma: ','
      - column_reference:
          identifier: b
      - data_type:
          keyword: char
          bracketed:
            start_bracket: (
            literal: '7'
            end_bracket: )
      - comma: ','
      - column_reference:
          identifier: c
      - data_type:
          keyword: character
      - comma: ','
      - column_reference:
          identifier: d
      - data_type:
          keyword: character
          bracketed:
            start_bracket: (
            literal: '5'
            end_bracket: )
      - comma: ','
      - column_reference:
          identifier: e
      - data_type:
        - keyword: character
        - keyword: varying
      - comma: ','
      - column_reference:
          identifier: f
      - data_type:
        - keyword: character
        - keyword: varying
        - bracketed:
            start_bracket: (
            literal: '8'
            end_bracket: )
      - comma: ','
      - column_reference:
          identifier: g
      - data_type:
          keyword: varchar
          bracketed:
            start_bracket: (
            literal: '9'
            end_bracket: )
      - comma: ','
      - column_reference:
          identifier: h
      - data_type:
          keyword: varchar
      - comma: ','
      - column_reference:
          identifier: i
      - data_type:
          keyword: text
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: f
    - bracketed:
        start_bracket: (
        column_reference:
          identifier: a
        data_type:
          keyword: bytea
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: g
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: a
      - data_type:
          datetime_type_identifier:
            keyword: date
      - comma: ','
      - column_reference:
          identifier: b
      - data_type:
          datetime_type_identifier:
            keyword: interval
            bracketed:
              start_bracket: (
              literal: '4'
              end_bracket: )
      - comma: ','
      - column_reference:
          identifier: c
      - data_type:
          datetime_type_identifier:
            keyword: time
            bracketed:
              start_bracket: (
              literal: '4'
              end_bracket: )
      - comma: ','
      - column_reference:
          identifier: d
      - data_type:
          datetime_type_identifier:
          - keyword: time
          - bracketed:
              start_bracket: (
              literal: '4'
              end_bracket: )
          - keyword: with
          - keyword: time
          - keyword: zone
      - comma: ','
      - column_reference:
          identifier: e
      - data_type:
          datetime_type_identifier:
          - keyword: time
          - bracketed:
              start_bracket: (
              literal: '4'
              end_bracket: )
          - keyword: without
          - keyword: time
          - keyword: zone
      - comma: ','
      - column_reference:
          identifier: f
      - data_type:
          datetime_type_identifier:
            keyword: timestamp
            bracketed:
              start_bracket: (
              literal: '4'
              end_bracket: )
      - comma: ','
      - column_reference:
          identifier: g
      - data_type:
          datetime_type_identifier:
          - keyword: timestamp
          - bracketed:
              start_bracket: (
              literal: '4'
              end_bracket: )
          - keyword: with
          - keyword: time
          - keyword: zone
      - comma: ','
      - column_reference:
          identifier: h
      - data_type:
          datetime_type_identifier:
          - keyword: timestamp
          - bracketed:
              start_bracket: (
              literal: '4'
              end_bracket: )
          - keyword: without
          - keyword: time
          - keyword: zone
      - comma: ','
      - column_reference:
          identifier: i
      - data_type:
          datetime_type_identifier:
            keyword: timetz
      - comma: ','
      - column_reference:
          identifier: j
      - data_type:
          datetime_type_identifier:
            keyword: timetz
            bracketed:
              start_bracket: (
              literal: '4'
              end_bracket: )
      - comma: ','
      - column_reference:
          identifier: k
      - data_type:
          datetime_type_identifier:
            keyword: timestamptz
      - comma: ','
      - column_reference:
          identifier: l
      - data_type:
          datetime_type_identifier:
            keyword: timestamptz
            bracketed:
              start_bracket: (
              literal: '4'
              end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: h
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: a
      - data_type:
          keyword: boolean
      - comma: ','
      - column_reference:
          identifier: b
      - data_type:
          keyword: bool
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: i
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: a
      - data_type:
          keyword: point
      - comma: ','
      - column_reference:
          identifier: b
      - data_type:
          keyword: line
      - comma: ','
      - column_reference:
          identifier: c
      - data_type:
          keyword: lseg
      - comma: ','
      - column_reference:
          identifier: d
      - data_type:
          keyword: box
      - comma: ','
      - column_reference:
          identifier: e
      - data_type:
          keyword: path
      - comma: ','
      - column_reference:
          identifier: f
      - data_type:
          keyword: polygon
      - comma: ','
      - column_reference:
          identifier: g
      - data_type:
          keyword: circle
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: j
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: a
      - data_type:
          keyword: cidr
      - comma: ','
      - column_reference:
          identifier: b
      - data_type:
          keyword: inet
      - comma: ','
      - column_reference:
          identifier: c
      - data_type:
          keyword: macaddr
      - comma: ','
      - column_reference:
          identifier: d
      - data_type:
          keyword: macaddr8
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: k
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: a
      - data_type:
          keyword: bit
      - comma: ','
      - column_reference:
          identifier: b
      - data_type:
          keyword: bit
          bracketed:
            start_bracket: (
            literal: '3'
            end_bracket: )
      - comma: ','
      - column_reference:
          identifier: c
      - data_type:
        - keyword: bit
        - keyword: varying
      - comma: ','
      - column_reference:
          identifier: d
      - data_type:
        - keyword: bit
        - keyword: varying
        - bracketed:
            start_bracket: (
            literal: '5'
            end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: l
    - bracketed:
        start_bracket: (
        column_reference:
          identifier: a
        data_type:
          keyword: pg_lsn
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: l
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: a
      - data_type:
          keyword: tsvector
      - comma: ','
      - column_reference:
          identifier: b
      - data_type:
          keyword: tsquery
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: m
    - bracketed:
        start_bracket: (
        column_reference:
          identifier: a
        data_type:
          keyword: uuid
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: n
    - bracketed:
        start_bracket: (
        column_reference:
          identifier: a
        data_type:
          keyword: xml
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: o
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: a
      - data_type:
          keyword: json
      - comma: ','
      - column_reference:
          identifier: b
      - data_type:
          keyword: jsonb
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: p
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: a
      - data_type:
          keyword: integer
          start_square_bracket: '['
          end_square_bracket: ']'
      - comma: ','
      - column_reference:
          identifier: b
      - data_type:
        - keyword: float
        - start_square_bracket: '['
        - end_square_bracket: ']'
        - start_square_bracket: '['
        - end_square_bracket: ']'
      - comma: ','
      - column_reference:
          identifier: c
      - data_type:
          keyword: char
          start_square_bracket: '['
          expression:
            literal: '1'
          end_square_bracket: ']'
      - comma: ','
      - column_reference:
          identifier: d
      - data_type:
        - keyword: jsonb
        - start_square_bracket: '['
        - expression:
            literal: '3'
        - end_square_bracket: ']'
        - start_square_bracket: '['
        - expression:
            literal: '5'
        - end_square_bracket: ']'
      - comma: ','
      - column_reference:
          identifier: e
      - data_type:
        - keyword: money
        - keyword: ARRAY
      - comma: ','
      - column_reference:
          identifier: f
      - data_type:
        - keyword: money
        - keyword: ARRAY
        - array_literal:
            start_square_bracket: '['
            expression:
              literal: '7'
            end_square_bracket: ']'
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_type_statement:
    - keyword: CREATE
    - keyword: TYPE
    - object_reference:
        identifier: bar
    - keyword: AS
    - keyword: ENUM
    - bracketed:
      - start_bracket: (
      - raw: "'foo'"
      - comma: ','
      - raw: "'bar'"
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: q
    - bracketed:
        start_bracket: (
        column_reference:
          identifier: a
        data_type:
          data_type_identifier: bar
        end_bracket: )
- statement_terminator: ;
- statement:
    create_type_statement:
    - keyword: create
    - keyword: type
    - object_reference:
      - identifier: public
      - dot: .
      - identifier: c
    - keyword: AS
    - keyword: ENUM
    - bracketed:
      - start_bracket: (
      - raw: "'foo'"
      - comma: ','
      - raw: "'bar'"
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: r
    - bracketed:
        start_bracket: (
        column_reference:
          identifier: a
        data_type:
          identifier: public
          dot: .
          data_type_identifier: c
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        identifier: a
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: b
      - data_type:
          datetime_type_identifier:
            keyword: DATE
      - comma: ','
      - column_reference:
          identifier: c
      - data_type:
          data_type_identifier: DATETIME
      - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            column_reference:
              identifier: b
            cast_expression:
              casting_operator: '::'
              data_type:
                data_type_identifier: DATETIME
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: a
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: b
      - comma: ','
      - select_clause_element:
          expression:
            column_reference:
              identifier: c
            cast_expression:
              casting_operator: '::'
              data_type:
                datetime_type_identifier:
                  keyword: DATE
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: a
- statement_terminator: ;
