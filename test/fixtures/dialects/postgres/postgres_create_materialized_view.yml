# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: d6ff3a18f404cf99e333bb99a0debee787101ab1a0545f9e5a94d23b882fc11a
file:
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        identifier: my_mat_view
    - keyword: AS
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            column_reference:
              identifier: a
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: my_table
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
        identifier: my_mat_view
    - keyword: AS
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            column_reference:
              identifier: a
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: my_table
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        identifier: my_mat_view
    - keyword: AS
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
            keyword: SELECT
            select_clause_element:
              column_reference:
                identifier: a
          from_clause:
            keyword: FROM
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    identifier: my_table
        end_bracket: )
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        identifier: my_mat_view
    - keyword: AS
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            column_reference:
              identifier: a
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: my_table
    - with_data_clause:
      - keyword: WITH
      - keyword: 'NO'
      - keyword: DATA
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        identifier: my_mat_view
    - keyword: AS
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            column_reference:
              identifier: a
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: my_table
    - with_data_clause:
      - keyword: WITH
      - keyword: DATA
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
        identifier: my_mat_view
    - keyword: AS
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
            keyword: SELECT
            select_clause_element:
              column_reference:
                identifier: a
          from_clause:
            keyword: FROM
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    identifier: my_table
        end_bracket: )
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        identifier: my_mat_view
    - keyword: AS
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
          - keyword: SELECT
          - select_clause_element:
              column_reference:
                identifier: a
          - comma: ','
          - select_clause_element:
              column_reference:
                identifier: b
          from_clause:
            keyword: FROM
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    identifier: my_table
          where_clause:
            keyword: WHERE
            expression:
              column_reference:
                identifier: y
              comparison_operator:
                raw_comparison_operator: '='
              literal: "'value'"
        end_bracket: )
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
        identifier: my_mat_view
    - keyword: AS
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
          - keyword: SELECT
          - select_clause_element:
              column_reference:
                identifier: a
          - comma: ','
          - select_clause_element:
              column_reference:
                identifier: b
          from_clause:
            keyword: FROM
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    identifier: my_table
          where_clause:
            keyword: WHERE
            expression:
              column_reference:
                identifier: y
              comparison_operator:
                raw_comparison_operator: '='
              literal: "'value'"
        end_bracket: )
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        identifier: my_mat_view
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              identifier: a
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: b
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: my_table
        where_clause:
          keyword: WHERE
          expression:
            column_reference:
              identifier: y
            comparison_operator:
              raw_comparison_operator: '='
            literal: "'value'"
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
        identifier: my_mat_view
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              identifier: a
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: b
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: my_table
        where_clause:
          keyword: WHERE
          expression:
            column_reference:
              identifier: y
            comparison_operator:
              raw_comparison_operator: '='
            literal: "'value'"
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        identifier: my_mat_view
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              identifier: a
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: b
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: my_table
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
        identifier: my_mat_view
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              identifier: a
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: b
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: my_table
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        identifier: bar
    - keyword: AS
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
            keyword: SELECT
            select_clause_element:
              column_reference:
                identifier: col
          from_clause:
            keyword: FROM
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    identifier: my_table
        end_bracket: )
    - with_data_clause:
      - keyword: WITH
      - keyword: 'NO'
      - keyword: DATA
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
        identifier: bar
    - keyword: AS
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
            keyword: SELECT
            select_clause_element:
              column_reference:
                identifier: col
          from_clause:
            keyword: FROM
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    identifier: my_table
        end_bracket: )
    - with_data_clause:
      - keyword: WITH
      - keyword: 'NO'
      - keyword: DATA
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        identifier: my_mat_view
    - keyword: USING
    - parameter: heap
    - keyword: TABLESPACE
    - tablespace_reference:
        identifier: pg_default
    - keyword: WITH
    - bracketed:
      - start_bracket: (
      - parameter: prop_a
      - comparison_operator:
          raw_comparison_operator: '='
      - literal: '1'
      - comma: ','
      - parameter: prob_b
      - comparison_operator:
          raw_comparison_operator: '='
      - literal: "'some_value'"
      - comma: ','
      - parameter: prop_c
      - comparison_operator:
          raw_comparison_operator: '='
      - literal: 'FALSE'
      - comma: ','
      - parameter: prop_d
      - end_bracket: )
    - keyword: AS
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
          - keyword: SELECT
          - select_clause_element:
              column_reference:
                identifier: a
          - comma: ','
          - select_clause_element:
              function:
                function_name:
                  function_name_identifier: avg
                bracketed:
                  start_bracket: (
                  expression:
                    column_reference:
                      identifier: b
                  end_bracket: )
              alias_expression:
                keyword: AS
                identifier: my_avg
          - comma: ','
          - select_clause_element:
              function:
                function_name:
                  function_name_identifier: count
                bracketed:
                  start_bracket: (
                  star: '*'
                  end_bracket: )
              alias_expression:
                keyword: AS
                identifier: my_count
          from_clause:
            keyword: FROM
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    identifier: my_table
          groupby_clause:
          - keyword: GROUP
          - keyword: BY
          - column_reference:
              identifier: grp
          having_clause:
            keyword: HAVING
            expression:
              column_reference:
                identifier: col
              comparison_operator:
                raw_comparison_operator: '>'
              literal: '2'
        end_bracket: )
    - with_data_clause:
      - keyword: WITH
      - keyword: DATA
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
        identifier: my_mat_view
    - keyword: USING
    - parameter: heap
    - keyword: TABLESPACE
    - tablespace_reference:
        identifier: pg_default
    - keyword: WITH
    - bracketed:
      - start_bracket: (
      - parameter: prop_a
      - comparison_operator:
          raw_comparison_operator: '='
      - literal: '1'
      - comma: ','
      - parameter: prob_b
      - comparison_operator:
          raw_comparison_operator: '='
      - literal: "'some_value'"
      - comma: ','
      - parameter: prop_c
      - comparison_operator:
          raw_comparison_operator: '='
      - literal: 'FALSE'
      - comma: ','
      - parameter: prop_d
      - end_bracket: )
    - keyword: AS
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
          - keyword: SELECT
          - select_clause_element:
              column_reference:
                identifier: a
          - comma: ','
          - select_clause_element:
              function:
                function_name:
                  function_name_identifier: avg
                bracketed:
                  start_bracket: (
                  expression:
                    column_reference:
                      identifier: b
                  end_bracket: )
              alias_expression:
                keyword: AS
                identifier: my_avg
          - comma: ','
          - select_clause_element:
              function:
                function_name:
                  function_name_identifier: count
                bracketed:
                  start_bracket: (
                  star: '*'
                  end_bracket: )
              alias_expression:
                keyword: AS
                identifier: my_count
          from_clause:
            keyword: FROM
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    identifier: my_table
          groupby_clause:
          - keyword: GROUP
          - keyword: BY
          - column_reference:
              identifier: grp
          having_clause:
            keyword: HAVING
            expression:
              column_reference:
                identifier: col
              comparison_operator:
                raw_comparison_operator: '>'
              literal: '2'
        end_bracket: )
    - with_data_clause:
      - keyword: WITH
      - keyword: DATA
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        identifier: my_mat_view
    - keyword: TABLESPACE
    - tablespace_reference:
        identifier: pg_default
    - keyword: AS
    - set_expression:
      - select_statement:
          select_clause:
          - keyword: SELECT
          - select_clause_element:
              column_reference:
              - identifier: table_1
              - dot: .
              - identifier: field_1
          - comma: ','
          - select_clause_element:
              column_reference:
              - identifier: table_1
              - dot: .
              - identifier: field_2
          from_clause:
            keyword: FROM
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    identifier: table_1
      - set_operator:
          keyword: UNION
      - select_statement:
          select_clause:
          - keyword: SELECT
          - select_clause_element:
              column_reference:
              - identifier: table_2
              - dot: .
              - identifier: field_1
          - comma: ','
          - select_clause_element:
              column_reference:
              - identifier: table_2
              - dot: .
              - identifier: field_2
          from_clause:
            keyword: FROM
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    identifier: table_2
      - orderby_clause:
        - keyword: ORDER
        - keyword: BY
        - column_reference:
            identifier: field_1
        - comma: ','
        - column_reference:
            identifier: field_2
    - with_data_clause:
      - keyword: WITH
      - keyword: DATA
- statement_terminator: ;
