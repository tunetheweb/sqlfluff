# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 580f747c4b912642342a1707b5860c39e484ad1caac8f3f114cb118b21be94ba
file:
  statement:
    set_expression:
    - select_statement:
        select_clause:
        - keyword: select
        - select_clause_element:
            column_reference:
              identifier: col1
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: col2
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: some_table
        qualify_clause:
          keyword: qualify
          expression:
            function:
              function_name:
                function_name_identifier: row_number
              bracketed:
                start_bracket: (
                end_bracket: )
              over_clause:
                keyword: over
                bracketed:
                  start_bracket: (
                  window_specification:
                    partitionby_clause:
                    - keyword: partition
                    - keyword: by
                    - expression:
                        column_reference:
                          identifier: col1
                    orderby_clause:
                    - keyword: order
                    - keyword: by
                    - column_reference:
                        identifier: col1
                  end_bracket: )
            comparison_operator:
              raw_comparison_operator: '='
            literal: '1'
    - set_operator:
      - keyword: union
      - keyword: all
    - select_statement:
        select_clause:
        - keyword: select
        - select_clause_element:
            column_reference:
              identifier: col1
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: col2
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: some_table
        qualify_clause:
          keyword: qualify
          expression:
            function:
              function_name:
                function_name_identifier: row_number
              bracketed:
                start_bracket: (
                end_bracket: )
              over_clause:
                keyword: over
                bracketed:
                  start_bracket: (
                  window_specification:
                    partitionby_clause:
                    - keyword: partition
                    - keyword: by
                    - expression:
                        column_reference:
                          identifier: col1
                    orderby_clause:
                    - keyword: order
                    - keyword: by
                    - column_reference:
                        identifier: col1
                  end_bracket: )
            comparison_operator:
              raw_comparison_operator: '='
            literal: '1'
