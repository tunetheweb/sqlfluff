# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: d8eee2dccf2bfcff100c1b33854c39ac4b8d74ca62aacf8144b6f0730a3a0d24
file:
- statement:
    delete_statement:
      keyword: DELETE
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: events
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
            identifier: date
          comparison_operator:
            raw_comparison_operator: <
          literal: "'2017-01-01'"
- statement_terminator: ;
- statement:
    delete_statement:
      keyword: DELETE
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              file_reference:
                keyword: DELTA
                dot: .
                identifier: '`/data/events/`'
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
            identifier: date
          comparison_operator:
            raw_comparison_operator: <
          literal: "'2017-01-01'"
- statement_terminator: ;
- statement:
    delete_statement:
      keyword: DELETE
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: all_events
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
            identifier: session_time
          comparison_operator:
            raw_comparison_operator: <
          bracketed:
            start_bracket: (
            expression:
              select_statement:
                select_clause:
                  keyword: SELECT
                  select_clause_element:
                    function:
                      function_name:
                        function_name_identifier: min
                      bracketed:
                        start_bracket: (
                        expression:
                          column_reference:
                            identifier: session_time
                        end_bracket: )
                from_clause:
                  keyword: FROM
                  from_expression:
                    from_expression_element:
                      table_expression:
                        table_reference:
                          identifier: good_events
            end_bracket: )
- statement_terminator: ;
- statement:
    delete_statement:
      keyword: DELETE
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: orders
            alias_expression:
              keyword: AS
              identifier: t1
      where_clause:
        keyword: WHERE
        expression:
          keyword: EXISTS
          bracketed:
            start_bracket: (
            select_statement:
              select_clause:
                keyword: SELECT
                select_clause_element:
                  column_reference:
                  - identifier: returned_orders
                  - dot: .
                  - identifier: oid
              from_clause:
                keyword: FROM
                from_expression:
                  from_expression_element:
                    table_expression:
                      table_reference:
                        identifier: returned_orders
              where_clause:
                keyword: WHERE
                expression:
                - column_reference:
                  - identifier: t1
                  - dot: .
                  - identifier: oid
                - comparison_operator:
                    raw_comparison_operator: '='
                - column_reference:
                  - identifier: returned_orders
                  - dot: .
                  - identifier: oid
            end_bracket: )
- statement_terminator: ;
- statement:
    delete_statement:
      keyword: DELETE
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: events
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            identifier: category
        - keyword: NOT
        - keyword: IN
        - bracketed:
            start_bracket: (
            select_statement:
              select_clause:
                keyword: SELECT
                select_clause_element:
                  column_reference:
                    identifier: category
              from_clause:
                keyword: FROM
                from_expression:
                  from_expression_element:
                    table_expression:
                      table_reference:
                        identifier: events2
              where_clause:
                keyword: WHERE
                expression:
                  column_reference:
                    identifier: date
                  comparison_operator:
                    raw_comparison_operator: '>'
                  literal: "'2001-01-01'"
            end_bracket: )
- statement_terminator: ;
