# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 5d8eaa50bcb0caebd89adc11b2e7edd1c27db0eb9b99c26e18394ddc40e52362
file:
- statement:
    explain_statement:
      keyword: EXPLAIN
      statement:
        select_statement:
          select_clause:
          - keyword: SELECT
          - select_clause_element:
              column_reference:
                identifier: a
          - comma: ','
          - select_clause_element:
              column_reference:
                identifier: b
          from_clause:
            keyword: FROM
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    identifier: person
- statement_terminator: ;
- statement:
    explain_statement:
      keyword: EXPLAIN
      statement:
        select_statement:
          select_clause:
            keyword: SELECT
            transform_clause:
            - keyword: TRANSFORM
            - bracketed:
              - start_bracket: (
              - identifier: zip_code
              - comma: ','
              - identifier: name
              - comma: ','
              - identifier: age
              - end_bracket: )
            - keyword: USING
            - literal: "'cat'"
            - keyword: AS
            - bracketed:
              - start_bracket: (
              - identifier: a
              - comma: ','
              - identifier: b
              - comma: ','
              - identifier: c
              - end_bracket: )
          from_clause:
            keyword: FROM
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    identifier: person
          where_clause:
            keyword: WHERE
            expression:
              column_reference:
                identifier: zip_code
              comparison_operator:
                raw_comparison_operator: '>'
              literal: '94511'
- statement_terminator: ;
- statement:
    explain_statement:
      keyword: EXPLAIN
      statement:
        alter_database_statement:
        - keyword: ALTER
        - keyword: DATABASE
        - database_reference:
            identifier: inventory
        - keyword: SET
        - keyword: DBPROPERTIES
        - bracketed:
            start_bracket: (
            property_name_identifier:
              identifier: "'Edited-by'"
            comparison_operator:
              raw_comparison_operator: '='
            literal: "'John'"
            end_bracket: )
- statement_terminator: ;
- statement:
    explain_statement:
      keyword: EXPLAIN
      statement:
        alter_table_statement:
        - keyword: ALTER
        - keyword: TABLE
        - table_reference:
            identifier: student
        - keyword: RENAME
        - keyword: TO
        - table_reference:
            identifier: studentinfo
- statement_terminator: ;
- statement:
    explain_statement:
      keyword: EXPLAIN
      statement:
        alter_view_statement:
        - keyword: ALTER
        - keyword: VIEW
        - table_reference:
            identifier: view_identifier
        - keyword: RENAME
        - keyword: TO
        - table_reference:
            identifier: view_identifier
- statement_terminator: ;
- statement:
    explain_statement:
      keyword: EXPLAIN
      statement:
        create_database_statement:
        - keyword: CREATE
        - keyword: DATABASE
        - keyword: IF
        - keyword: NOT
        - keyword: EXISTS
        - database_reference:
            identifier: database_name
        - keyword: COMMENT
        - literal: '"database_comment"'
        - keyword: LOCATION
        - literal: '"root/database_directory"'
        - keyword: WITH
        - keyword: DBPROPERTIES
        - bracketed:
            start_bracket: (
            property_name_identifier:
              identifier: '"property_name"'
            comparison_operator:
              raw_comparison_operator: '='
            literal: '"property_value"'
            end_bracket: )
- statement_terminator: ;
- statement:
    explain_statement:
      keyword: EXPLAIN
      statement:
        create_function_statement:
        - keyword: CREATE
        - binary_operator: OR
        - keyword: REPLACE
        - keyword: TEMPORARY
        - keyword: FUNCTION
        - keyword: IF
        - keyword: NOT
        - keyword: EXISTS
        - function_name_identifier: function_name
        - keyword: AS
        - literal: '"class_name"'
        - keyword: USING
        - file_keyword: FILE
        - literal: '"resource_locations"'
- statement_terminator: ;
- statement:
    explain_statement:
      keyword: EXPLAIN
      statement:
        create_table_statement:
        - keyword: CREATE
        - keyword: TABLE
        - table_reference:
            identifier: student
        - bracketed:
          - start_bracket: (
          - column_definition:
              identifier: id
              data_type:
                primitive_type:
                  keyword: INT
          - comma: ','
          - column_definition:
              identifier: student_name
              data_type:
                primitive_type:
                  keyword: STRING
          - comma: ','
          - column_definition:
              identifier: age
              data_type:
                primitive_type:
                  keyword: INT
          - end_bracket: )
        - keyword: USING
        - keyword: CSV
- statement_terminator: ;
- statement:
    explain_statement:
      keyword: EXPLAIN
      statement:
        create_table_statement:
        - keyword: CREATE
        - keyword: TABLE
        - table_reference:
            identifier: student
        - bracketed:
          - start_bracket: (
          - column_definition:
              identifier: id
              data_type:
                primitive_type:
                  keyword: INT
          - comma: ','
          - column_definition:
              identifier: student_name
              data_type:
                primitive_type:
                  keyword: STRING
          - comma: ','
          - column_definition:
              identifier: age
              data_type:
                primitive_type:
                  keyword: INT
          - end_bracket: )
        - keyword: STORED
        - keyword: AS
        - keyword: ORC
- statement_terminator: ;
- statement:
    explain_statement:
      keyword: EXPLAIN
      statement:
        create_table_statement:
        - keyword: CREATE
        - keyword: TABLE
        - table_reference:
            identifier: student_dupli
        - keyword: LIKE
        - table_reference:
            identifier: student
        - row_format_clause:
          - keyword: ROW
          - keyword: FORMAT
          - keyword: DELIMITED
          - keyword: FIELDS
          - keyword: TERMINATED
          - keyword: BY
          - literal: "','"
        - keyword: STORED
        - keyword: AS
        - file_format: TEXTFILE
        - keyword: TBLPROPERTIES
        - bracketed:
            start_bracket: (
            property_name_identifier:
              identifier: "'owner'"
            comparison_operator:
              raw_comparison_operator: '='
            literal: "'xxxx'"
            end_bracket: )
- statement_terminator: ;
- statement:
    explain_statement:
      keyword: EXPLAIN
      statement:
        create_view_statement:
        - keyword: CREATE
        - keyword: VIEW
        - table_reference:
            identifier: experienced_employee_extended
        - keyword: AS
        - select_statement:
            select_clause:
              keyword: SELECT
              select_clause_element:
                column_reference:
                  identifier: a
            from_clause:
              keyword: FROM
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      identifier: experienced_employee
- statement_terminator: ;
- statement:
    explain_statement:
      keyword: EXPLAIN
      statement:
        drop_database_statement:
        - keyword: DROP
        - keyword: DATABASE
        - keyword: IF
        - keyword: EXISTS
        - database_reference:
            identifier: dbname
- statement_terminator: ;
- statement:
    explain_statement:
      keyword: EXPLAIN
      statement:
        drop_function_statement:
        - keyword: DROP
        - keyword: FUNCTION
        - function_name:
            function_name_identifier: test_avg
- statement_terminator: ;
- statement:
    explain_statement:
      keyword: EXPLAIN
      statement:
        use_statement:
          keyword: USE
          database_reference:
            identifier: database_name
- statement_terminator: ;
- statement:
    explain_statement:
      keyword: EXPLAIN
      statement:
        truncate_table:
        - keyword: TRUNCATE
        - keyword: TABLE
        - table_reference:
            identifier: student
        - keyword: PARTITION
        - bracketed:
            start_bracket: (
            column_reference:
              identifier: age
            comparison_operator:
              raw_comparison_operator: '='
            literal: '10'
            end_bracket: )
- statement_terminator: ;
- statement:
    explain_statement:
      keyword: EXPLAIN
      statement:
        msck_repair_table_statement:
        - keyword: MSCK
        - keyword: REPAIR
        - keyword: TABLE
        - table_reference:
            identifier: table_identifier
        - keyword: ADD
        - keyword: PARTITIONS
- statement_terminator: ;
- statement:
    explain_statement:
      keyword: EXPLAIN
      statement:
        refresh_statement:
        - keyword: REFRESH
        - keyword: TABLE
        - table_reference:
            identifier: tbl1
- statement_terminator: ;
- statement:
    explain_statement:
      keyword: EXPLAIN
      statement:
        refresh_statement:
        - keyword: REFRESH
        - keyword: FUNCTION
        - function_name:
            function_name_identifier: func1
- statement_terminator: ;
- statement:
    explain_statement:
      keyword: EXPLAIN
      statement:
        load_data_statement:
        - keyword: LOAD
        - keyword: DATA
        - keyword: LOCAL
        - keyword: INPATH
        - literal: "'/user/hive/warehouse/students'"
        - keyword: OVERWRITE
        - keyword: INTO
        - keyword: TABLE
        - table_reference:
            identifier: test_load
- statement_terminator: ;
- statement:
    explain_statement:
      keyword: EXPLAIN
      statement:
        insert_statement:
        - keyword: INSERT
        - keyword: INTO
        - keyword: TABLE
        - table_reference:
            identifier: students
        - values_clause:
            keyword: VALUES
            bracketed:
            - start_bracket: (
            - expression:
                literal: "'Amy Smith'"
            - comma: ','
            - expression:
                literal: "'123 Park Ave, San Jose'"
            - comma: ','
            - expression:
                literal: '111111'
            - end_bracket: )
- statement_terminator: ;
- statement:
    explain_statement:
      keyword: EXPLAIN
      statement:
        drop_view_statement:
        - keyword: DROP
        - keyword: VIEW
        - keyword: IF
        - keyword: EXISTS
        - table_reference:
            identifier: view_identifier
- statement_terminator: ;
