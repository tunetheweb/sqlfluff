# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 5f9ad7bf7b49d556f00496d6ec41b3142cdef9d5ca22fb863c788a65b03389fb
file:
- statement:
    update_statement:
      keyword: UPDATE
      table_reference:
        identifier: events
      set_clause_list:
        keyword: SET
        set_clause:
          column_reference:
            identifier: event_type
          comparison_operator:
            raw_comparison_operator: '='
          literal: "'click'"
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
            identifier: event_type
          comparison_operator:
            raw_comparison_operator: '='
          literal: "'clck'"
- statement_terminator: ;
- statement:
    update_statement:
      keyword: UPDATE
      file_reference:
        keyword: DELTA
        dot: .
        identifier: '`/data/events/`'
      set_clause_list:
        keyword: SET
        set_clause:
          column_reference:
            identifier: event_type
          comparison_operator:
            raw_comparison_operator: '='
          literal: "'click'"
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
            identifier: event_type
          comparison_operator:
            raw_comparison_operator: '='
          literal: "'clck'"
- statement_terminator: ;
- statement:
    update_statement:
      keyword: UPDATE
      table_reference:
        identifier: all_events
      set_clause_list:
      - keyword: SET
      - set_clause:
          column_reference:
            identifier: session_time
          comparison_operator:
            raw_comparison_operator: '='
          literal: '0'
      - comma: ','
      - set_clause:
          column_reference:
            identifier: ignored
          comparison_operator:
            raw_comparison_operator: '='
          literal: 'true'
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
            identifier: session_time
          comparison_operator:
            raw_comparison_operator: <
          bracketed:
            start_bracket: (
            expression:
              select_statement:
                select_clause:
                  keyword: SELECT
                  select_clause_element:
                    function:
                      function_name:
                        function_name_identifier: min
                      bracketed:
                        start_bracket: (
                        expression:
                          column_reference:
                            identifier: session_time
                        end_bracket: )
                from_clause:
                  keyword: FROM
                  from_expression:
                    from_expression_element:
                      table_expression:
                        table_reference:
                          identifier: good_events
            end_bracket: )
- statement_terminator: ;
- statement:
    update_statement:
      keyword: UPDATE
      table_reference:
        identifier: orders
      alias_expression:
        keyword: AS
        identifier: t1
      set_clause_list:
        keyword: SET
        set_clause:
          column_reference:
            identifier: order_status
          comparison_operator:
            raw_comparison_operator: '='
          literal: "'returned'"
      where_clause:
        keyword: WHERE
        expression:
          keyword: EXISTS
          bracketed:
            start_bracket: (
            select_statement:
              select_clause:
                keyword: SELECT
                select_clause_element:
                  column_reference:
                  - identifier: returned_orders
                  - dot: .
                  - identifier: oid
              from_clause:
                keyword: FROM
                from_expression:
                  from_expression_element:
                    table_expression:
                      table_reference:
                        identifier: returned_orders
              where_clause:
                keyword: WHERE
                expression:
                - column_reference:
                  - identifier: t1
                  - dot: .
                  - identifier: oid
                - comparison_operator:
                    raw_comparison_operator: '='
                - column_reference:
                  - identifier: returned_orders
                  - dot: .
                  - identifier: oid
            end_bracket: )
- statement_terminator: ;
- statement:
    update_statement:
      keyword: UPDATE
      table_reference:
        identifier: events
      set_clause_list:
        keyword: SET
        set_clause:
          column_reference:
            identifier: category
          comparison_operator:
            raw_comparison_operator: '='
          literal: "'undefined'"
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            identifier: category
        - keyword: NOT
        - keyword: IN
        - bracketed:
            start_bracket: (
            select_statement:
              select_clause:
                keyword: SELECT
                select_clause_element:
                  column_reference:
                    identifier: category
              from_clause:
                keyword: FROM
                from_expression:
                  from_expression_element:
                    table_expression:
                      table_reference:
                        identifier: events2
              where_clause:
                keyword: WHERE
                expression:
                  column_reference:
                    identifier: date
                  comparison_operator:
                    raw_comparison_operator: '>'
                  literal: "'2001-01-01'"
            end_bracket: )
- statement_terminator: ;
