# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: af81613a4b767dff57430b9e30266761b44d034233ebd9e0481e4993251e2c68
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: explode
            bracketed:
              start_bracket: (
              expression:
                function:
                  function_name:
                    function_name_identifier: array
                  bracketed:
                  - start_bracket: (
                  - expression:
                      literal: '10'
                  - comma: ','
                  - expression:
                      literal: '20'
                  - end_bracket: )
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: explode_outer
            bracketed:
              start_bracket: (
              expression:
                function:
                  function_name:
                    function_name_identifier: array
                  bracketed:
                  - start_bracket: (
                  - expression:
                      literal: '10'
                  - comma: ','
                  - expression:
                      literal: '20'
                  - end_bracket: )
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
          - identifier: test
          - dot: .
          - identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
          - identifier: test
          - dot: .
          - identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: test
            lateral_view_clause:
            - keyword: LATERAL
            - keyword: VIEW
            - function:
                function_name:
                  function_name_identifier: explode
                bracketed:
                  start_bracket: (
                  expression:
                    function:
                      function_name:
                        function_name_identifier: array
                      bracketed:
                      - start_bracket: (
                      - expression:
                          literal: '3'
                      - comma: ','
                      - expression:
                          literal: '4'
                      - end_bracket: )
                  end_bracket: )
            - keyword: AS
            - identifier: c2
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
          - identifier: test
          - dot: .
          - identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
          - identifier: test
          - dot: .
          - identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: test
            lateral_view_clause:
            - keyword: LATERAL
            - keyword: VIEW
            - function:
                function_name:
                  function_name_identifier: explode_outer
                bracketed:
                  start_bracket: (
                  expression:
                    function:
                      function_name:
                        function_name_identifier: array
                      bracketed:
                      - start_bracket: (
                      - expression:
                          literal: '3'
                      - comma: ','
                      - expression:
                          literal: '4'
                      - end_bracket: )
                  end_bracket: )
            - keyword: AS
            - identifier: c2
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: inline
            bracketed:
              start_bracket: (
              expression:
                function:
                  function_name:
                    function_name_identifier: array
                  bracketed:
                  - start_bracket: (
                  - expression:
                      function:
                        function_name:
                          function_name_identifier: struct
                        bracketed:
                        - start_bracket: (
                        - expression:
                            literal: '1'
                        - comma: ','
                        - expression:
                            literal: "'a'"
                        - end_bracket: )
                  - comma: ','
                  - expression:
                      function:
                        function_name:
                          function_name_identifier: struct
                        bracketed:
                        - start_bracket: (
                        - expression:
                            literal: '2'
                        - comma: ','
                        - expression:
                            literal: "'b'"
                        - end_bracket: )
                  - end_bracket: )
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: inline_outer
            bracketed:
              start_bracket: (
              expression:
                function:
                  function_name:
                    function_name_identifier: array
                  bracketed:
                  - start_bracket: (
                  - expression:
                      function:
                        function_name:
                          function_name_identifier: struct
                        bracketed:
                        - start_bracket: (
                        - expression:
                            literal: '1'
                        - comma: ','
                        - expression:
                            literal: "'a'"
                        - end_bracket: )
                  - comma: ','
                  - expression:
                      function:
                        function_name:
                          function_name_identifier: struct
                        bracketed:
                        - start_bracket: (
                        - expression:
                            literal: '2'
                        - comma: ','
                        - expression:
                            literal: "'b'"
                        - end_bracket: )
                  - end_bracket: )
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
          - identifier: test
          - dot: .
          - identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
          - identifier: test
          - dot: .
          - identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: test
            lateral_view_clause:
            - keyword: LATERAL
            - keyword: VIEW
            - function:
                function_name:
                  function_name_identifier: inline
                bracketed:
                  start_bracket: (
                  expression:
                    function:
                      function_name:
                        function_name_identifier: array
                      bracketed:
                      - start_bracket: (
                      - expression:
                          function:
                            function_name:
                              function_name_identifier: struct
                            bracketed:
                            - start_bracket: (
                            - expression:
                                literal: '1'
                            - comma: ','
                            - expression:
                                literal: "'a'"
                            - end_bracket: )
                      - comma: ','
                      - expression:
                          function:
                            function_name:
                              function_name_identifier: struct
                            bracketed:
                            - start_bracket: (
                            - expression:
                                literal: '2'
                            - comma: ','
                            - expression:
                                literal: "'b'"
                            - end_bracket: )
                      - end_bracket: )
                  end_bracket: )
            - keyword: AS
            - identifier: c1
            - comma: ','
            - identifier: c2
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
          - identifier: test
          - dot: .
          - identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
          - identifier: test
          - dot: .
          - identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: test
            lateral_view_clause:
            - keyword: LATERAL
            - keyword: VIEW
            - function:
                function_name:
                  function_name_identifier: inline_outer
                bracketed:
                  start_bracket: (
                  expression:
                    function:
                      function_name:
                        function_name_identifier: array
                      bracketed:
                      - start_bracket: (
                      - expression:
                          function:
                            function_name:
                              function_name_identifier: struct
                            bracketed:
                            - start_bracket: (
                            - expression:
                                literal: '1'
                            - comma: ','
                            - expression:
                                literal: "'a'"
                            - end_bracket: )
                      - comma: ','
                      - expression:
                          function:
                            function_name:
                              function_name_identifier: struct
                            bracketed:
                            - start_bracket: (
                            - expression:
                                literal: '2'
                            - comma: ','
                            - expression:
                                literal: "'b'"
                            - end_bracket: )
                      - end_bracket: )
                  end_bracket: )
            - keyword: AS
            - identifier: c1
            - comma: ','
            - identifier: c2
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: posexplode
            bracketed:
              start_bracket: (
              expression:
                function:
                  function_name:
                    function_name_identifier: array
                  bracketed:
                  - start_bracket: (
                  - expression:
                      literal: '10'
                  - comma: ','
                  - expression:
                      literal: '20'
                  - end_bracket: )
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: posexplode_outer
            bracketed:
              start_bracket: (
              expression:
                function:
                  function_name:
                    function_name_identifier: array
                  bracketed:
                  - start_bracket: (
                  - expression:
                      literal: '10'
                  - comma: ','
                  - expression:
                      literal: '20'
                  - end_bracket: )
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
          - identifier: test
          - dot: .
          - identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
          - identifier: test
          - dot: .
          - identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: test
            lateral_view_clause:
            - keyword: LATERAL
            - keyword: VIEW
            - function:
                function_name:
                  function_name_identifier: posexplode
                bracketed:
                  start_bracket: (
                  expression:
                    function:
                      function_name:
                        function_name_identifier: array
                      bracketed:
                      - start_bracket: (
                      - expression:
                          literal: '10'
                      - comma: ','
                      - expression:
                          literal: '20'
                      - end_bracket: )
                  end_bracket: )
            - keyword: AS
            - identifier: c1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
          - identifier: test
          - dot: .
          - identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
          - identifier: test
          - dot: .
          - identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: test
            lateral_view_clause:
            - keyword: LATERAL
            - keyword: VIEW
            - function:
                function_name:
                  function_name_identifier: posexplode_outer
                bracketed:
                  start_bracket: (
                  expression:
                    function:
                      function_name:
                        function_name_identifier: array
                      bracketed:
                      - start_bracket: (
                      - expression:
                          literal: '10'
                      - comma: ','
                      - expression:
                          literal: '20'
                      - end_bracket: )
                  end_bracket: )
            - keyword: AS
            - identifier: c1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: stack
            bracketed:
            - start_bracket: (
            - expression:
                literal: '2'
            - comma: ','
            - expression:
                literal: '1'
            - comma: ','
            - expression:
                literal: '2'
            - comma: ','
            - expression:
                literal: '3'
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
          - identifier: test
          - dot: .
          - identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
          - identifier: test
          - dot: .
          - identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: test
            lateral_view_clause:
            - keyword: LATERAL
            - keyword: VIEW
            - function:
                function_name:
                  function_name_identifier: stack
                bracketed:
                - start_bracket: (
                - expression:
                    literal: '2'
                - comma: ','
                - expression:
                    literal: '1'
                - comma: ','
                - expression:
                    literal: '2'
                - comma: ','
                - expression:
                    literal: '3'
                - end_bracket: )
            - keyword: AS
            - identifier: c1
            - comma: ','
            - identifier: c2
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: json_tuple
            bracketed:
            - start_bracket: (
            - expression:
                literal: "'{\"a\":1, \"b\":2}'"
            - comma: ','
            - expression:
                literal: "'a'"
            - comma: ','
            - expression:
                literal: "'b'"
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
          - identifier: test
          - dot: .
          - identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
          - identifier: test
          - dot: .
          - identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: test
            lateral_view_clause:
            - keyword: LATERAL
            - keyword: VIEW
            - function:
                function_name:
                  function_name_identifier: json_tuple
                bracketed:
                - start_bracket: (
                - expression:
                    literal: "'{\"a\":1, \"b\":2}'"
                - comma: ','
                - expression:
                    literal: "'a'"
                - comma: ','
                - expression:
                    literal: "'b'"
                - end_bracket: )
            - keyword: AS
            - identifier: c1
            - comma: ','
            - identifier: c2
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: parse_url
            bracketed:
            - start_bracket: (
            - expression:
                literal: "'http://spark.apache.org/path?query=1'"
            - comma: ','
            - expression:
                literal: "'HOST'"
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
          - identifier: test
          - dot: .
          - identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
          - identifier: test
          - dot: .
          - identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: test
            lateral_view_clause:
            - keyword: LATERAL
            - keyword: VIEW
            - function:
                function_name:
                  function_name_identifier: parse_url
                bracketed:
                - start_bracket: (
                - expression:
                    literal: "'http://spark.apache.org/path?query=1'"
                - comma: ','
                - expression:
                    literal: "'HOST'"
                - end_bracket: )
            - keyword: AS
            - identifier: c1
- statement_terminator: ;
